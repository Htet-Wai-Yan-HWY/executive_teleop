[0.119s] Invoking command in '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop': CMAKE_PREFIX_PATH=/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee /usr/bin/cmake --build /home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop -- -j12 -l12
[0.209s] [35m[1mConsolidate compiler generated dependencies of target teleop_tool[0m
[0.259s] [ 50%] [32mBuilding CXX object CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o[0m
[8.175s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In constructor â€˜[01m[Kexecutive_teleop::executive_teleop(int, char**)[m[Kâ€™:
[8.175s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:169:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[8.175s]   220 | ,std::bind(&executive_teleop::AckCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[8.175s]       |                                                                      [01;31m[K^[m[K
[8.175s] 
[8.177s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.177s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.177s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™
[8.178s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[8.178s]       |         [01;36m[K^~~~~~~~[m[K
[8.178s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.178s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™:
[8.178s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.179s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:169:[m[K   required from here
[8.179s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&>[m[Kâ€™
[8.179s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.179s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.179s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™
[8.179s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[8.179s]       |         [01;36m[K^~~~~~~~[m[K
[8.179s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.179s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:169:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[8.180s]   220 | ,std::bind(&executive_teleop::AckCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.180s]       |                                                                      [01;36m[K^[m[K
[8.180s] 
[8.180s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.180s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.180s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™
[8.180s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[8.180s]       |         [01;36m[K^~~~~~~~[m[K
[8.180s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.180s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™:
[8.181s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.181s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:169:[m[K   required from here
[8.181s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&>[m[Kâ€™
[8.181s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.181s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.181s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™
[8.181s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[8.181s]       |         [01;36m[K^~~~~~~~[m[K
[8.181s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.181s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:169:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[8.181s]   220 | ,std::bind(&executive_teleop::AckCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.182s]       |                                                                      [01;36m[K^[m[K
[8.182s] 
[8.182s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.182s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.182s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™
[8.182s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[8.182s]       |                   [01;36m[K^~~~~~~~[m[K
[8.182s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&[m[Kâ€™
[8.182s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[8.182s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[8.182s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::msg::AckStamped_<std::allocator<void> >][m[Kâ€™
[8.183s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[8.183s]       |       [01;36m[K^~~~~~~~[m[K
[8.183s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&&[m[Kâ€™
[8.183s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[8.183s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[8.183s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:225:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >[m[Kâ€™ has no member named â€˜[01m[KgetNumPublishers[m[Kâ€™
[8.183s]   225 |   while (ack_sub.[01;31m[KgetNumPublishers[m[K() == 0) {
[8.183s]       |                  [01;31m[K^~~~~~~~~~~~~~~~[m[K
[8.314s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:270:111:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[8.315s]   270 | ind(&executive_teleop::AgentStateCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[8.315s]       |                                                                      [01;31m[K^[m[K
[8.315s] 
[8.315s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.315s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.315s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[8.315s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[8.315s]       |         [01;36m[K^~~~~~~~[m[K
[8.316s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.316s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™:
[8.316s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.316s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:270:111:[m[K   required from here
[8.316s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&>[m[Kâ€™
[8.316s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.316s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.316s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[8.316s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[8.316s]       |         [01;36m[K^~~~~~~~[m[K
[8.316s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.316s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:270:111:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[8.316s]   270 | ind(&executive_teleop::AgentStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.317s]       |                                                                      [01;36m[K^[m[K
[8.317s] 
[8.317s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.317s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.317s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[8.317s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[8.317s]       |         [01;36m[K^~~~~~~~[m[K
[8.317s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.317s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™:
[8.317s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.317s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:270:111:[m[K   required from here
[8.317s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&>[m[Kâ€™
[8.317s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.317s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.318s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[8.318s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[8.318s]       |         [01;36m[K^~~~~~~~[m[K
[8.318s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.318s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:270:111:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[8.319s]   270 | ind(&executive_teleop::AgentStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.319s]       |                                                                      [01;36m[K^[m[K
[8.319s] 
[8.319s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.319s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.319s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[8.319s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[8.319s]       |                   [01;36m[K^~~~~~~~[m[K
[8.319s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&[m[Kâ€™
[8.319s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[8.319s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[8.320s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[8.320s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[8.320s]       |       [01;36m[K^~~~~~~~[m[K
[8.320s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&&[m[Kâ€™
[8.320s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[8.320s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[8.391s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:277:112:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[8.391s]   277 | ind(&executive_teleop::FaultStateCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[8.392s]       |                                                                      [01;31m[K^[m[K
[8.392s] 
[8.392s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.392s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.392s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[8.392s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[8.392s]       |         [01;36m[K^~~~~~~~[m[K
[8.392s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.392s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™:
[8.393s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.393s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:277:112:[m[K   required from here
[8.393s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&>[m[Kâ€™
[8.393s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.393s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.393s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[8.393s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[8.393s]       |         [01;36m[K^~~~~~~~[m[K
[8.393s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.394s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:277:112:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[8.394s]   277 | ind(&executive_teleop::FaultStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.394s]       |                                                                      [01;36m[K^[m[K
[8.394s] 
[8.394s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.394s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.394s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[8.394s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[8.394s]       |         [01;36m[K^~~~~~~~[m[K
[8.395s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.395s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™:
[8.395s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.395s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:277:112:[m[K   required from here
[8.395s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&>[m[Kâ€™
[8.395s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.395s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.396s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[8.396s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[8.396s]       |         [01;36m[K^~~~~~~~[m[K
[8.396s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.396s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:277:112:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[8.396s]   277 | ind(&executive_teleop::FaultStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.396s]       |                                                                      [01;36m[K^[m[K
[8.396s] 
[8.396s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.396s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.396s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[8.396s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[8.396s]       |                   [01;36m[K^~~~~~~~[m[K
[8.397s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&[m[Kâ€™
[8.397s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[8.397s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[8.397s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[8.397s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[8.397s]       |       [01;36m[K^~~~~~~~[m[K
[8.397s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&&[m[Kâ€™
[8.397s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[8.397s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[8.479s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:187:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[8.479s]   283 | d(&executive_teleop::MoveFeedbackCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[8.479s]       |                                                                      [01;31m[K^[m[K
[8.479s] 
[8.479s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.479s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.480s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[8.480s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[8.480s]       |         [01;36m[K^~~~~~~~[m[K
[8.480s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.480s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™:
[8.480s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.480s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:187:[m[K   required from here
[8.480s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&>[m[Kâ€™
[8.480s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.480s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.481s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[8.481s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[8.481s]       |         [01;36m[K^~~~~~~~[m[K
[8.481s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.481s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:187:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[8.481s]   283 | d(&executive_teleop::MoveFeedbackCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.481s]       |                                                                      [01;36m[K^[m[K
[8.481s] 
[8.481s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.482s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.482s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[8.482s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[8.482s]       |         [01;36m[K^~~~~~~~[m[K
[8.482s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.482s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™:
[8.482s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[8.482s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:187:[m[K   required from here
[8.482s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&>[m[Kâ€™
[8.482s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[8.482s]       |               [01;31m[K^~~~~~~~~~~[m[K
[8.482s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[8.482s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[8.482s]       |         [01;36m[K^~~~~~~~[m[K
[8.482s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.483s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:187:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[8.483s]   283 | d(&executive_teleop::MoveFeedbackCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[8.483s]       |                                                                      [01;36m[K^[m[K
[8.483s] 
[8.483s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[8.483s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[8.483s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[8.483s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[8.483s]       |                   [01;36m[K^~~~~~~~[m[K
[8.483s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&[m[Kâ€™
[8.483s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[8.483s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[8.483s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[8.484s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[8.484s]       |       [01;36m[K^~~~~~~~[m[K
[8.484s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&&[m[Kâ€™
[8.484s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[8.484s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[8.484s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:289:137:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KDockFeedbbackCallback[m[Kâ€™ is not a member of â€˜[01m[Kexecutive_teleop[m[Kâ€™
[8.484s]   289 | ge::SharedPtr>(topic_name, 10, std::bind(&executive_teleop::[01;31m[KDockFeedbbackCallback[m[K,this,std::placeholders::_1));
[8.484s]       |                                                             [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[8.484s] 
[8.484s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:292:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass std::shared_ptr<ff_msgs::action::Dock_FeedbackMessage_<std::allocator<void> > >[m[Kâ€™ has no member named â€˜[01m[KgetNumPublishers[m[Kâ€™
[8.484s]   292 |     while (dock_sub.[01;31m[KgetNumPublishers[m[K() == 0) {
[8.484s]       |                     [01;31m[K^~~~~~~~~~~~~~~~[m[K
[8.484s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::Finished()[m[Kâ€™:
[8.484s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:325:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.484s]   325 | [01;35m[K}[m[K
[8.485s]       | [01;35m[K^[m[K
[8.536s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendMobilityCommand()[m[Kâ€™:
[8.536s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:600:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.536s]   600 | [01;35m[K}[m[K
[8.536s]       | [01;35m[K^[m[K
[8.537s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendResetBias()[m[Kâ€™:
[8.538s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:615:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.538s]   615 | [01;35m[K}[m[K
[8.538s]       | [01;35m[K^[m[K
[8.538s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendResetEkf()[m[Kâ€™:
[8.538s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:630:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.538s]   630 | [01;35m[K}[m[K
[8.538s]       | [01;35m[K^[m[K
[8.540s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetCheckZones()[m[Kâ€™:
[8.540s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:654:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.540s]   654 | [01;35m[K}[m[K
[8.540s]       | [01;35m[K^[m[K
[8.541s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetFaceForward()[m[Kâ€™:
[8.541s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:683:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.542s]   683 | [01;35m[K}[m[K
[8.542s]       | [01;35m[K^[m[K
[8.543s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetOpLimits()[m[Kâ€™:
[8.543s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:733:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.543s]   733 | [01;35m[K}[m[K
[8.543s]       | [01;35m[K^[m[K
[8.544s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetPlanner()[m[Kâ€™:
[8.544s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:753:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[8.544s]   753 | [01;35m[K}[m[K
[8.544s]       | [01;35m[K^[m[K
[10.622s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[10.622s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[10.622s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.623s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.623s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.623s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.624s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:75:[m[K   required from here
[10.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>[m[Kâ€™})
[10.624s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[10.624s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[10.624s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[10.624s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.625s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.625s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.625s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.625s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[10.626s]       |         [01;36m[K^~~~~~~~[m[K
[10.626s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[10.626s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[10.626s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>][m[Kâ€™
[10.626s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[10.626s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:75:[m[K   required from here
[10.627s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[10.627s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[10.627s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[10.627s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.627s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:220:75:[m[K   required from here
[10.628s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.628s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[10.628s]       |                [01;36m[K^~~~~~~~[m[K
[10.628s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[10.628s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[10.628s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[10.628s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.628s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[10.628s]       |                [01;36m[K^~~~~~~~[m[K
[10.628s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[10.628s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[10.628s]       |                          [01;36m[K^~~~~~~~~[m[K
[10.668s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[10.668s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[10.668s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.669s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.669s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.669s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.670s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.670s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.670s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.670s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.670s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:268:92:[m[K   required from here
[10.670s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>[m[Kâ€™})
[10.670s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[10.670s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[10.670s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.671s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.672s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.672s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[10.672s]       |         [01;36m[K^~~~~~~~[m[K
[10.672s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[10.672s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[10.672s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>][m[Kâ€™
[10.672s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:268:92:[m[K   required from here
[10.673s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[10.673s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[10.673s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[10.673s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.674s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:268:92:[m[K   required from here
[10.674s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.674s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[10.674s]       |                [01;36m[K^~~~~~~~[m[K
[10.674s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[10.674s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[10.674s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[10.674s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.674s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[10.674s]       |                [01;36m[K^~~~~~~~[m[K
[10.674s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[10.674s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[10.674s]       |                          [01;36m[K^~~~~~~~~[m[K
[10.716s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.717s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.718s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.718s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.718s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.718s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.718s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.718s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.719s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:275:85:[m[K   required from here
[10.719s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>[m[Kâ€™})
[10.719s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[10.719s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[10.719s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[10.719s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[10.719s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.719s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.719s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.720s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.720s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.720s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.720s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.720s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.720s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.720s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.720s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[10.720s]       |         [01;36m[K^~~~~~~~[m[K
[10.720s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[10.721s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[10.721s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>][m[Kâ€™
[10.721s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[10.721s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.721s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.722s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.722s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.722s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:275:85:[m[K   required from here
[10.722s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[10.722s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[10.722s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[10.722s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.722s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.723s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.723s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.723s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.723s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:275:85:[m[K   required from here
[10.723s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.723s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[10.724s]       |                [01;36m[K^~~~~~~~[m[K
[10.724s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[10.724s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[10.724s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[10.724s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.724s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[10.724s]       |                [01;36m[K^~~~~~~~[m[K
[10.725s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[10.725s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[10.725s]       |                          [01;36m[K^~~~~~~~~[m[K
[10.762s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[10.763s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[10.763s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.763s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.763s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.763s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.764s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.764s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.764s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.764s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.764s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.764s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.765s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.765s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.765s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.765s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.765s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:93:[m[K   required from here
[10.765s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>[m[Kâ€™})
[10.765s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[10.765s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[10.765s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[10.766s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[10.767s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[10.767s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[10.767s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.767s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[10.767s]       |         [01;36m[K^~~~~~~~[m[K
[10.767s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[10.768s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[10.768s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>][m[Kâ€™
[10.768s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[10.768s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.769s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.769s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.769s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.769s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:93:[m[K   required from here
[10.769s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[10.769s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[10.769s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[10.770s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[10.770s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.770s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.770s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.770s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[10.770s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:283:93:[m[K   required from here
[10.770s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.771s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[10.771s]       |                [01;36m[K^~~~~~~~[m[K
[10.771s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[10.771s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[10.771s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[10.771s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[10.772s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[10.772s]       |                [01;36m[K^~~~~~~~[m[K
[10.772s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[10.772s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[10.772s]       |                          [01;36m[K^~~~~~~~~[m[K
[15.308s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendNextCommand()[m[Kâ€™:
[15.308s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:790:1:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[15.308s]   790 | [01;35m[K}[m[K
[15.308s]       | [01;35m[K^[m[K
[15.478s] gmake[2]: *** [CMakeFiles/teleop_tool.dir/build.make:76: CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o] Error 1
[15.478s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/teleop_tool.dir/all] Error 2
[15.478s] gmake: *** [Makefile:146: all] Error 2
[15.481s] Invoked command in '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop' returned '2': CMAKE_PREFIX_PATH=/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee /usr/bin/cmake --build /home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop -- -j12 -l12
