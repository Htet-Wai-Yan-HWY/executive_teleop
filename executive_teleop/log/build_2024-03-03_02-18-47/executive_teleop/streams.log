[0.115s] Invoking command in '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop': CMAKE_PREFIX_PATH=/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee /usr/bin/cmake --build /home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop -- -j12 -l12
[0.191s] [35m[1mConsolidate compiler generated dependencies of target teleop_tool[0m
[0.221s] [ 50%] [32mBuilding CXX object CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o[0m
[5.490s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In constructor â€˜[01m[Kexecutive_teleop::executive_teleop(int, char**)[m[Kâ€™:
[5.490s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:219:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kexecutive_teleop::create_subscription<ff_msgs::msg::AckStamped_>(const char [8], int, std::_Bind_helper<false, void (executive_teleop::*)(const ff_msgs::msg::AckStamped_<std::allocator<void> >&), executive_teleop*, const std::_Placeholder<1>&>::type)[m[Kâ€™
[5.491s]   219 |   ack_sub = [01;31m[Kthis->create_subscription<ff_msgs::msg::AckStamped_>([m[K
[5.491s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[5.491s]   220 | [01;31m[K            TOPIC_MANAGEMENT_ACK, 10, std::bind(&executive_teleop::AckCallback, this, std::placeholders::_1))[m[K;
[5.491s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.491s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[5.491s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22[m[K,
[5.491s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.491s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[5.491s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
[5.491s]   219 |   [01;36m[Kcreate_subscription[m[K(
[5.491s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[5.491s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:219:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.492s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:219:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
[5.492s]   219 |   ack_sub = [01;31m[Kthis->create_subscription<ff_msgs::msg::AckStamped_>([m[K
[5.492s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[5.492s]   220 | [01;31m[K            TOPIC_MANAGEMENT_ACK, 10, std::bind(&executive_teleop::AckCallback, this, std::placeholders::_1))[m[K;
[5.492s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.492s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:219:65:[m[K [01;36m[Knote: [m[K  expected a type, got â€˜[01m[KAckStamped_[m[Kâ€™
[5.492s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:224:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass std::shared_ptr<ff_msgs::msg::AckStamped_<std::allocator<void> > >[m[Kâ€™ has no member named â€˜[01m[KgetNumPublishers[m[Kâ€™
[5.492s]   224 |   while (ack_sub.[01;31m[KgetNumPublishers[m[K() == 0) {
[5.492s]       |                  [01;31m[K^~~~~~~~~~~~~~~~[m[K
[5.640s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:269:111:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[5.641s]   269 |                                    std::bind(&executive_teleop::AgentStateCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[5.641s]       |                                                                                                               [01;31m[K^[m[K
[5.641s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.641s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.641s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[5.642s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[5.642s]       |         [01;36m[K^~~~~~~~[m[K
[5.642s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.643s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™:
[5.643s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[5.643s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:269:111:[m[K   required from here
[5.644s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&>[m[Kâ€™
[5.644s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[5.644s]       |               [01;31m[K^~~~~~~~~~~[m[K
[5.644s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[5.644s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[5.645s]       |         [01;36m[K^~~~~~~~[m[K
[5.645s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.646s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:269:111:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[5.646s]   269 |                                    std::bind(&executive_teleop::AgentStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[5.646s]       |                                                                                                               [01;36m[K^[m[K
[5.646s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.646s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.646s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[5.646s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[5.646s]       |         [01;36m[K^~~~~~~~[m[K
[5.646s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.647s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™:
[5.647s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[5.647s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:269:111:[m[K   required from here
[5.647s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&>[m[Kâ€™
[5.647s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[5.647s]       |               [01;31m[K^~~~~~~~~~~[m[K
[5.647s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[5.647s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[5.647s]       |         [01;36m[K^~~~~~~~[m[K
[5.647s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.647s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:269:111:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[5.647s]   269 |                                    std::bind(&executive_teleop::AgentStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[5.648s]       |                                                                                                               [01;36m[K^[m[K
[5.648s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.648s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.648s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[5.648s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[5.648s]       |                   [01;36m[K^~~~~~~~[m[K
[5.648s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&[m[Kâ€™
[5.648s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[5.648s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[5.648s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >][m[Kâ€™
[5.649s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[5.649s]       |       [01;36m[K^~~~~~~~[m[K
[5.649s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&&[m[Kâ€™
[5.649s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[5.649s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[5.826s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:276:112:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[5.826s]   276 |                                     std::bind(&executive_teleop::FaultStateCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[5.826s]       |                                                                                                                [01;31m[K^[m[K
[5.827s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.827s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.827s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[5.827s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[5.827s]       |         [01;36m[K^~~~~~~~[m[K
[5.827s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.827s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™:
[5.827s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[5.827s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:276:112:[m[K   required from here
[5.827s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&>[m[Kâ€™
[5.828s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[5.828s]       |               [01;31m[K^~~~~~~~~~~[m[K
[5.828s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[5.828s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[5.828s]       |         [01;36m[K^~~~~~~~[m[K
[5.828s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.828s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:276:112:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[5.828s]   276 |                                     std::bind(&executive_teleop::FaultStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[5.828s]       |                                                                                                                [01;36m[K^[m[K
[5.829s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.829s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.829s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[5.829s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[5.829s]       |         [01;36m[K^~~~~~~~[m[K
[5.829s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.829s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™:
[5.829s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[5.829s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:276:112:[m[K   required from here
[5.829s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&>[m[Kâ€™
[5.830s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[5.830s]       |               [01;31m[K^~~~~~~~~~~[m[K
[5.830s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[5.830s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[5.830s]       |         [01;36m[K^~~~~~~~[m[K
[5.830s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.830s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:276:112:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[5.830s]   276 |                                     std::bind(&executive_teleop::FaultStateCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[5.830s]       |                                                                                                                [01;36m[K^[m[K
[5.830s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.831s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.831s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[5.831s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[5.831s]       |                   [01;36m[K^~~~~~~~[m[K
[5.831s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&[m[Kâ€™
[5.831s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[5.831s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[5.831s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::msg::FaultState_<std::allocator<void> >][m[Kâ€™
[5.831s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[5.831s]       |       [01;36m[K^~~~~~~~[m[K
[5.832s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&&[m[Kâ€™
[5.832s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[5.832s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[5.872s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:187:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >[m[Kâ€™ and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™)
[5.872s]   282 | reate_subscription<ff_msgs::action::Motion_FeedbackMessage::SharedPtr>(topic_name, 10, std::bind(&executive_teleop::MoveFeedbackCallback,this,std::placeholders::_1)[01;31m[K)[m[K;
[5.873s]       |                                                                                                                                                                     [01;31m[K^[m[K
[5.873s] 
[5.873s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.873s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.873s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[5.873s]   363 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[5.873s]       |         [01;36m[K^~~~~~~~[m[K
[5.873s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.873s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™:
[5.874s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[5.874s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:187:[m[K   required from here
[5.874s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&>[m[Kâ€™
[5.874s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[5.874s]       |               [01;31m[K^~~~~~~~~~~[m[K
[5.874s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[5.874s]   374 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[5.874s]       |         [01;36m[K^~~~~~~~[m[K
[5.874s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:374:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.874s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:187:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[5.875s]   282 | reate_subscription<ff_msgs::action::Motion_FeedbackMessage::SharedPtr>(topic_name, 10, std::bind(&executive_teleop::MoveFeedbackCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[5.875s]       |                                                                                                                                                                     [01;36m[K^[m[K
[5.875s] 
[5.875s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.875s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.875s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[5.875s]   391 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[5.875s]       |         [01;36m[K^~~~~~~~[m[K
[5.875s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.875s] /usr/include/c++/11/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™:
[5.876s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:391:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[5.876s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:187:[m[K   required from here
[5.876s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:130:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&>[m[Kâ€™
[5.876s]   130 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[5.876s]       |               [01;31m[K^~~~~~~~~~~[m[K
[5.876s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[5.876s]   399 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[5.876s]       |         [01;36m[K^~~~~~~~[m[K
[5.876s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:399:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.876s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:187:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[5.877s]   282 | reate_subscription<ff_msgs::action::Motion_FeedbackMessage::SharedPtr>(topic_name, 10, std::bind(&executive_teleop::MoveFeedbackCallback,this,std::placeholders::_1)[01;36m[K)[m[K;
[5.877s]       |                                                                                                                                                                     [01;36m[K^[m[K
[5.877s] 
[5.877s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[5.877s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21[m[K:
[5.877s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[5.877s]   359 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[5.877s]       |                   [01;36m[K^~~~~~~~[m[K
[5.877s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:359:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&[m[Kâ€™
[5.877s]   359 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[5.878s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[5.878s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >][m[Kâ€™
[5.878s]   383 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[5.878s]       |       [01;36m[K^~~~~~~~[m[K
[5.878s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:383:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&&[m[Kâ€™
[5.878s]   383 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[5.878s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[5.878s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:288:137:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KDockFeedbbackCallback[m[Kâ€™ is not a member of â€˜[01m[Kexecutive_teleop[m[Kâ€™
[5.878s]   288 |     dock_sub = this->create_subscription<ff_msgs::action::Dock_FeedbackMessage::SharedPtr>(topic_name, 10, std::bind(&executive_teleop::[01;31m[KDockFeedbbackCallback[m[K,this,std::placeholders::_1));
[5.879s]       |                                                                                                                                         [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[5.879s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:291:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass std::shared_ptr<ff_msgs::action::Dock_FeedbackMessage_<std::allocator<void> > >[m[Kâ€™ has no member named â€˜[01m[KgetNumPublishers[m[Kâ€™
[5.879s]   291 |     while (dock_sub.[01;31m[KgetNumPublishers[m[K() == 0) {
[5.879s]       |                     [01;31m[K^~~~~~~~~~~~~~~~[m[K
[5.879s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::Finished()[m[Kâ€™:
[5.879s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:324:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.879s]   324 | [01;35m[K}[m[K
[5.879s]       | [01;35m[K^[m[K
[5.910s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendMobilityCommand()[m[Kâ€™:
[5.910s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:599:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.910s]   599 | [01;35m[K}[m[K
[5.910s]       | [01;35m[K^[m[K
[5.911s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendResetBias()[m[Kâ€™:
[5.911s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:614:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.911s]   614 | [01;35m[K}[m[K
[5.911s]       | [01;35m[K^[m[K
[5.911s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendResetEkf()[m[Kâ€™:
[5.911s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:629:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.911s]   629 | [01;35m[K}[m[K
[5.911s]       | [01;35m[K^[m[K
[5.912s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetCheckZones()[m[Kâ€™:
[5.912s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:653:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.912s]   653 | [01;35m[K}[m[K
[5.912s]       | [01;35m[K^[m[K
[5.913s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetFaceForward()[m[Kâ€™:
[5.913s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:682:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.913s]   682 | [01;35m[K}[m[K
[5.913s]       | [01;35m[K^[m[K
[5.914s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetOpLimits()[m[Kâ€™:
[5.914s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:732:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.914s]   732 | [01;35m[K}[m[K
[5.914s]       | [01;35m[K^[m[K
[5.914s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendSetPlanner()[m[Kâ€™:
[5.914s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:752:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[5.914s]   752 | [01;35m[K}[m[K
[5.915s]       | [01;35m[K^[m[K
[6.617s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[6.618s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[6.618s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.618s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.618s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.619s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.619s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.619s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.619s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.619s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.619s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[6.619s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.619s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.620s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.620s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.620s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.620s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:267:92:[m[K   required from here
[6.620s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>[m[Kâ€™})
[6.620s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[6.620s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[6.620s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.621s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.621s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[6.622s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.622s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[6.622s]       |         [01;36m[K^~~~~~~~[m[K
[6.622s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[6.622s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[6.623s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>][m[Kâ€™
[6.623s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[6.623s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.623s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.623s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.624s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:267:92:[m[K   required from here
[6.624s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[6.624s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[6.624s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.624s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.624s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.625s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.625s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.625s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:267:92:[m[K   required from here
[6.625s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.625s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[6.625s]       |                [01;36m[K^~~~~~~~[m[K
[6.625s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[6.625s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[6.625s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[6.626s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.626s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[6.626s]       |                [01;36m[K^~~~~~~~[m[K
[6.626s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::AgentStateStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[6.626s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[6.626s]       |                          [01;36m[K^~~~~~~~~[m[K
[6.654s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[6.654s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[6.654s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.654s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.655s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.655s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.655s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.655s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.655s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.655s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.655s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[6.656s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.656s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.656s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.656s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.656s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.656s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:274:85:[m[K   required from here
[6.656s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>[m[Kâ€™})
[6.656s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[6.657s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[6.657s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.657s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.657s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[6.657s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.658s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[6.658s]       |         [01;36m[K^~~~~~~~[m[K
[6.658s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[6.658s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[6.658s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>][m[Kâ€™
[6.658s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[6.658s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.658s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.658s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.659s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.659s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:274:85:[m[K   required from here
[6.659s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[6.659s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[6.659s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.659s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.659s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.659s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.659s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.659s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[6.659s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:274:85:[m[K   required from here
[6.659s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.660s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[6.660s]       |                [01;36m[K^~~~~~~~[m[K
[6.660s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[6.660s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[6.660s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[6.660s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.660s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[6.660s]       |                [01;36m[K^~~~~~~~[m[K
[6.660s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::msg::FaultState_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[6.660s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[6.660s]       |                          [01;36m[K^~~~~~~~~[m[K
[7.076s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[7.077s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[7.077s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[7.077s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[7.077s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[7.077s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[7.078s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[7.078s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[7.078s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[7.078s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[7.078s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[7.078s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[7.078s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.078s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.078s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.079s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.079s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:93:[m[K   required from here
[7.079s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>[m[Kâ€™})
[7.079s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[7.079s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[7.079s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[7.079s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[7.079s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[7.079s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[7.080s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[7.080s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[7.080s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[7.080s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[7.080s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[7.080s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[7.080s]                  from [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29[m[K:
[7.080s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[7.080s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[7.080s]       |         [01;36m[K^~~~~~~~[m[K
[7.081s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[7.081s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[7.081s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>][m[Kâ€™
[7.081s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™
[7.081s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.081s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.081s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.082s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.082s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:93:[m[K   required from here
[7.082s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[7.082s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[7.082s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[7.082s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; AllocatorT = std::allocator<void>][m[Kâ€™:
[7.082s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.082s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.082s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.083s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >; CallbackT = std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void>, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::allocator<void> > >][m[Kâ€™
[7.083s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:282:93:[m[K   required from here
[7.083s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[7.083s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[7.083s]       |                [01;36m[K^~~~~~~~[m[K
[7.083s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[7.083s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[7.084s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[7.084s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[7.084s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[7.084s]       |                [01;36m[K^~~~~~~~[m[K
[7.084s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::_Bind<void (executive_teleop::*(executive_teleop*, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > >, std::default_delete<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<std::shared_ptr<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[7.084s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[7.084s]       |                          [01;36m[K^~~~~~~~~[m[K
[9.831s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:[m[K In member function â€˜[01m[Kbool executive_teleop::SendNextCommand()[m[Kâ€™:
[9.832s] [01m[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:789:1:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[9.832s]   789 | [01;35m[K}[m[K
[9.832s]       | [01;35m[K^[m[K
[9.990s] gmake[2]: *** [CMakeFiles/teleop_tool.dir/build.make:76: CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o] Error 1
[9.990s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/teleop_tool.dir/all] Error 2
[9.990s] gmake: *** [Makefile:146: all] Error 2
[9.992s] Invoked command in '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop' returned '2': CMAKE_PREFIX_PATH=/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee /usr/bin/cmake --build /home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop -- -j12 -l12
