[0.000000] (-) TimerEvent: {}
[0.000632] (executive_teleop) JobQueued: {'identifier': 'executive_teleop', 'dependencies': OrderedDict()}
[0.000713] (executive_teleop) JobStarted: {'identifier': 'executive_teleop'}
[0.083668] (executive_teleop) JobProgress: {'identifier': 'executive_teleop', 'progress': 'cmake'}
[0.084383] (executive_teleop) Command: {'cmd': ['/usr/bin/cmake', '/home/zyme/ros_ws/executive_teleop/executive_teleop', '-DCMAKE_INSTALL_PREFIX=/home/zyme/ros_ws/executive_teleop/executive_teleop/install/executive_teleop'], 'cwd': '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'zyme'), ('ROS_PACKAGE_PATH', '/home/zyme/ros_ws/astrobee/install/pmc/share:/home/zyme/ros_ws/astrobee/install/camera/share'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/zyme/ros_ws/astrobee/install/states/lib:/home/zyme/ros_ws/astrobee/install/light_flow/lib:/home/zyme/ros_ws/astrobee/install/fam/lib:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/lib:/home/zyme/ros_ws/astrobee/install/perch/lib:/home/zyme/ros_ws/astrobee/install/framestore/lib:/home/zyme/ros_ws/astrobee/install/dock/lib:/home/zyme/ros_ws/astrobee/install/ctl/lib:/home/zyme/ros_ws/astrobee/install/arm/lib:/home/zyme/ros_ws/astrobee/install/access_control/lib:/home/zyme/ros_ws/astrobee/install/ff_util/lib:/home/zyme/ros_ws/astrobee/install/msg_conversions/lib:/home/zyme/ros_ws/astrobee/install/jsonloader/lib:/home/zyme/ros_ws/astrobee/install/ff_msgs/lib:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs/lib:/home/zyme/ros_ws/astrobee/install/config_reader/lib:/home/zyme/ros_ws/astrobee/install/ff_common/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/zyme'), ('OLDPWD', '/home/zyme/ros_ws/executive_teleop'), ('DESKTOP_SESSION', 'pop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'pop'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '2937'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('QT_QPA_PLATFORMTHEME', 'qt5ct'), ('COLCON_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'zyme'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/home/zyme/ros_ws/astrobee/install/pmc/lib/x86_64-linux-gnu/pkgconfig:/home/zyme/ros_ws/astrobee/install/pmc/lib/pkgconfig:/home/zyme/ros_ws/astrobee/install/camera/lib/x86_64-linux-gnu/pkgconfig:/home/zyme/ros_ws/astrobee/install/camera/lib/pkgconfig'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'zyme'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_iss/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_granite/share:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer/share:/home/zyme/ros_ws/astrobee/install/astrobee_dock/share'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/zyme/ros_ws/astrobee/install/perch/bin:/home/zyme/ros_ws/astrobee/install/msg_conversions/bin:/home/zyme/ros_ws/astrobee/install/camera/bin:/opt/ros/humble/bin:/home/zyme/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/pop-os:@/tmp/.ICE-unix/2753,unix/pop-os:/tmp/.ICE-unix/2753'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/47a5ca85_a0bc_407a_9c37_63921ad8915b'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'pop:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'pop'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.133'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'pop'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/share/astrobee_gazebo/worlds:/home/zyme/ros_ws/astrobee/install/astrobee_iss/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_granite/share:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer/share:/home/zyme/ros_ws/astrobee/install/astrobee_dock/share'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-pop:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/lib/astrobee_gazebo'), ('XDG_DATA_DIRS', '/usr/share/pop:/usr/share/gnome:/home/zyme/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/'), ('PYTHONPATH', '/home/zyme/ros_ws/astrobee/install/ff_msgs/local/lib/python3.10/dist-packages:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs/local/lib/python3.10/dist-packages:/home/zyme/ros_ws/astrobee/install/astrobee/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee')]), 'shell': False}
[0.100034] (-) TimerEvent: {}
[0.200322] (-) TimerEvent: {}
[0.247838] (executive_teleop) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.300416] (-) TimerEvent: {}
[0.350523] (executive_teleop) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[0.361525] (executive_teleop) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.400541] (-) TimerEvent: {}
[0.442599] (executive_teleop) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.449277] (executive_teleop) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.449679] (executive_teleop) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.450272] (executive_teleop) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.453580] (executive_teleop) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.500695] (-) TimerEvent: {}
[0.538149] (executive_teleop) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.544977] (executive_teleop) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.545205] (executive_teleop) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.545613] (executive_teleop) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.555609] (executive_teleop) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.7 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.600765] (-) TimerEvent: {}
[0.700998] (-) TimerEvent: {}
[0.727835] (executive_teleop) StdoutLine: {'line': b'-- Found Python3: /usr/bin/python3.10 (found version "3.10.12") found components: Interpreter \n'}
[0.801134] (-) TimerEvent: {}
[0.839153] (executive_teleop) StdoutLine: {'line': b'-- Found rclcpp: 16.0.8 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[0.901258] (-) TimerEvent: {}
[0.907872] (executive_teleop) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[0.915793] (executive_teleop) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[0.928174] (executive_teleop) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[0.949306] (executive_teleop) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.976666] (executive_teleop) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.001419] (-) TimerEvent: {}
[1.084886] (executive_teleop) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[1.091654] (executive_teleop) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 6.2.6 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)\n'}
[1.101497] (-) TimerEvent: {}
[1.201739] (-) TimerEvent: {}
[1.227136] (executive_teleop) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.2")  \n'}
[1.261945] (executive_teleop) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/humble/include  \n'}
[1.301864] (-) TimerEvent: {}
[1.321881] (executive_teleop) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[1.340476] (executive_teleop) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[1.402036] (-) TimerEvent: {}
[1.433392] (executive_teleop) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[1.433814] (executive_teleop) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[1.502104] (-) TimerEvent: {}
[1.516221] (executive_teleop) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n'}
[1.517444] (executive_teleop) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.602215] (-) TimerEvent: {}
[1.702515] (-) TimerEvent: {}
[1.708460] (executive_teleop) StdoutLine: {'line': b'-- Found tf2: 0.25.5 (/opt/ros/humble/share/tf2/cmake)\n'}
[1.783909] (executive_teleop) StdoutLine: {'line': b'-- Found tf2_ros: 0.25.6 (/opt/ros/humble/share/tf2_ros/cmake)\n'}
[1.802599] (-) TimerEvent: {}
[1.902918] (-) TimerEvent: {}
[2.003168] (-) TimerEvent: {}
[2.103425] (-) TimerEvent: {}
[2.149793] (executive_teleop) StdoutLine: {'line': b'-- Found ff_msgs: 0.0.0 (/home/zyme/ros_ws/astrobee/install/ff_msgs/share/ff_msgs/cmake)\n'}
[2.203522] (-) TimerEvent: {}
[2.303785] (-) TimerEvent: {}
[2.404049] (-) TimerEvent: {}
[2.497306] (executive_teleop) StdoutLine: {'line': b'-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)\n'}
[2.498889] (executive_teleop) StdoutLine: {'line': b'-- Found Eigen3: TRUE (found version "3.4.0") \n'}
[2.499085] (executive_teleop) StdoutLine: {'line': b'-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target\n'}
[2.504118] (-) TimerEvent: {}
[2.604345] (-) TimerEvent: {}
[2.645051] (executive_teleop) StdoutLine: {'line': b'-- Found ff_util: 1.0.0 (/home/zyme/ros_ws/astrobee/install/ff_util/share/ff_util/cmake)\n'}
[2.677041] (executive_teleop) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.12.10 (/opt/ros/humble/share/ament_lint_auto/cmake)\n'}
[2.704457] (-) TimerEvent: {}
[2.772966] (executive_teleop) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[2.773173] (executive_teleop) StdoutLine: {'line': b'-- Configured cppcheck include dirs: \n'}
[2.773274] (executive_teleop) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[2.775638] (executive_teleop) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[2.781258] (executive_teleop) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[2.781378] (executive_teleop) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[2.782559] (executive_teleop) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[2.784872] (executive_teleop) StdoutLine: {'line': b'-- Configuring done\n'}
[2.802181] (executive_teleop) StdoutLine: {'line': b'-- Generating done\n'}
[2.804044] (executive_teleop) StdoutLine: {'line': b'-- Build files have been written to: /home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop\n'}
[2.804542] (-) TimerEvent: {}
[2.813614] (executive_teleop) CommandEnded: {'returncode': 0}
[2.815217] (executive_teleop) JobProgress: {'identifier': 'executive_teleop', 'progress': 'build'}
[2.815250] (executive_teleop) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop', '--', '-j12', '-l12'], 'cwd': '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'zyme'), ('ROS_PACKAGE_PATH', '/home/zyme/ros_ws/astrobee/install/pmc/share:/home/zyme/ros_ws/astrobee/install/camera/share'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/zyme/ros_ws/astrobee/install/states/lib:/home/zyme/ros_ws/astrobee/install/light_flow/lib:/home/zyme/ros_ws/astrobee/install/fam/lib:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/lib:/home/zyme/ros_ws/astrobee/install/perch/lib:/home/zyme/ros_ws/astrobee/install/framestore/lib:/home/zyme/ros_ws/astrobee/install/dock/lib:/home/zyme/ros_ws/astrobee/install/ctl/lib:/home/zyme/ros_ws/astrobee/install/arm/lib:/home/zyme/ros_ws/astrobee/install/access_control/lib:/home/zyme/ros_ws/astrobee/install/ff_util/lib:/home/zyme/ros_ws/astrobee/install/msg_conversions/lib:/home/zyme/ros_ws/astrobee/install/jsonloader/lib:/home/zyme/ros_ws/astrobee/install/ff_msgs/lib:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs/lib:/home/zyme/ros_ws/astrobee/install/config_reader/lib:/home/zyme/ros_ws/astrobee/install/ff_common/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/zyme'), ('OLDPWD', '/home/zyme/ros_ws/executive_teleop'), ('DESKTOP_SESSION', 'pop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'pop'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '2937'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('QT_QPA_PLATFORMTHEME', 'qt5ct'), ('COLCON_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'zyme'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/home/zyme/ros_ws/astrobee/install/pmc/lib/x86_64-linux-gnu/pkgconfig:/home/zyme/ros_ws/astrobee/install/pmc/lib/pkgconfig:/home/zyme/ros_ws/astrobee/install/camera/lib/x86_64-linux-gnu/pkgconfig:/home/zyme/ros_ws/astrobee/install/camera/lib/pkgconfig'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'zyme'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_iss/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_granite/share:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer/share:/home/zyme/ros_ws/astrobee/install/astrobee_dock/share'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/zyme/ros_ws/astrobee/install/perch/bin:/home/zyme/ros_ws/astrobee/install/msg_conversions/bin:/home/zyme/ros_ws/astrobee/install/camera/bin:/opt/ros/humble/bin:/home/zyme/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/pop-os:@/tmp/.ICE-unix/2753,unix/pop-os:/tmp/.ICE-unix/2753'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/47a5ca85_a0bc_407a_9c37_63921ad8915b'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'pop:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'pop'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.133'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'pop'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/share/astrobee_gazebo/worlds:/home/zyme/ros_ws/astrobee/install/astrobee_iss/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_granite/share:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer/share:/home/zyme/ros_ws/astrobee/install/astrobee_dock/share'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-pop:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/lib/astrobee_gazebo'), ('XDG_DATA_DIRS', '/usr/share/pop:/usr/share/gnome:/home/zyme/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/'), ('PYTHONPATH', '/home/zyme/ros_ws/astrobee/install/ff_msgs/local/lib/python3.10/dist-packages:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs/local/lib/python3.10/dist-packages:/home/zyme/ros_ws/astrobee/install/astrobee/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee')]), 'shell': False}
[2.874897] (executive_teleop) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o\x1b[0m\n'}
[2.904665] (-) TimerEvent: {}
[3.005024] (-) TimerEvent: {}
[3.105430] (-) TimerEvent: {}
[3.205683] (-) TimerEvent: {}
[3.305938] (-) TimerEvent: {}
[3.406224] (-) TimerEvent: {}
[3.506480] (-) TimerEvent: {}
[3.606736] (-) TimerEvent: {}
[3.706994] (-) TimerEvent: {}
[3.807253] (-) TimerEvent: {}
[3.907512] (-) TimerEvent: {}
[4.007820] (-) TimerEvent: {}
[4.108076] (-) TimerEvent: {}
[4.208335] (-) TimerEvent: {}
[4.308599] (-) TimerEvent: {}
[4.408866] (-) TimerEvent: {}
[4.509128] (-) TimerEvent: {}
[4.609404] (-) TimerEvent: {}
[4.709682] (-) TimerEvent: {}
[4.809947] (-) TimerEvent: {}
[4.910212] (-) TimerEvent: {}
[5.010478] (-) TimerEvent: {}
[5.110743] (-) TimerEvent: {}
[5.211008] (-) TimerEvent: {}
[5.311274] (-) TimerEvent: {}
[5.411539] (-) TimerEvent: {}
[5.511809] (-) TimerEvent: {}
[5.612070] (-) TimerEvent: {}
[5.712330] (-) TimerEvent: {}
[5.812591] (-) TimerEvent: {}
[5.912863] (-) TimerEvent: {}
[6.013143] (-) TimerEvent: {}
[6.089108] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.089347] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:775:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kack_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.089406] (executive_teleop) StderrLine: {'line': b'  775 |   \x1b[01;31m\x1b[Kack_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::msg::AckStamped>(TOPIC_MANAGEMENT_ACK, 10,std::bind(&executive_teleop::AckCallback,node,std::placeholders::_1));\n'}
[6.089458] (executive_teleop) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.089506] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:775:119:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid executive_teleop::AckCallback(const AckStamped&)\x1b[m\x1b[K\xe2\x80\x99 is private within this context\n'}
[6.089560] (executive_teleop) StderrLine: {'line': b'  775 | mped>(TOPIC_MANAGEMENT_ACK, 10,std::bind(&executive_teleop::\x1b[01;31m\x1b[KAckCallback\x1b[m\x1b[K,node,std::placeholders::_1));\n'}
[6.089607] (executive_teleop) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.089653] (executive_teleop) StderrLine: {'line': b'\n'}
[6.089698] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:584:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared private here\n'}
[6.089744] (executive_teleop) StderrLine: {'line': b'  584 | void \x1b[01;36m\x1b[KAckCallback\x1b[m\x1b[K(ff_msgs::msg::AckStamped const& ack) {\n'}
[6.089794] (executive_teleop) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.113273] (-) TimerEvent: {}
[6.138715] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:823:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kagent_state_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.138877] (executive_teleop) StderrLine: {'line': b'  823 |     \x1b[01;31m\x1b[Kagent_state_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::msg::AgentStateStamped >(TOPIC_MANAGEMENT_EXEC_AGENT_STATE,\n'}
[6.139006] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.139105] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:825:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid executive_teleop::AgentStateCallback(const AgentStateStamped&)\x1b[m\x1b[K\xe2\x80\x99 is private within this context\n'}
[6.139186] (executive_teleop) StderrLine: {'line': b'  825 |                                std::bind(&executive_teleop::\x1b[01;31m\x1b[KAgentStateCallback\x1b[m\x1b[K,node,std::placeholders::_1));\n'}
[6.139263] (executive_teleop) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.139340] (executive_teleop) StderrLine: {'line': b'\n'}
[6.139420] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:119:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared private here\n'}
[6.139500] (executive_teleop) StderrLine: {'line': b'  119 | void \x1b[01;36m\x1b[KAgentStateCallback\x1b[m\x1b[K(ff_msgs::msg::AgentStateStamped const& state) {\n'}
[6.139580] (executive_teleop) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.203848] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:830:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfault_state_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.203985] (executive_teleop) StderrLine: {'line': b'  830 |     \x1b[01;31m\x1b[Kfault_state_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::msg::FaultState>(TOPIC_MANAGEMENT_SYS_MONITOR_STATE,\n'}
[6.204051] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.204099] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:832:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid executive_teleop::FaultStateCallback(const FaultState&)\x1b[m\x1b[K\xe2\x80\x99 is private within this context\n'}
[6.204150] (executive_teleop) StderrLine: {'line': b'  832 |                                std::bind(&executive_teleop::\x1b[01;31m\x1b[KFaultStateCallback\x1b[m\x1b[K,node,std::placeholders::_1));\n'}
[6.204205] (executive_teleop) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.204252] (executive_teleop) StderrLine: {'line': b'\n'}
[6.204297] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:230:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared private here\n'}
[6.204342] (executive_teleop) StderrLine: {'line': b'  230 | void \x1b[01;36m\x1b[KFaultStateCallback\x1b[m\x1b[K(ff_msgs::msg::FaultState const& state) {\n'}
[6.204388] (executive_teleop) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.213388] (-) TimerEvent: {}
[6.246556] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:838:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmove_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.246701] (executive_teleop) StderrLine: {'line': b'  838 |     \x1b[01;31m\x1b[Kmove_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::action::Motion_FeedbackMessage>(topic_name, 10, std::bind(&executive_teleop::MoveFeedbackCallback,node,std::placeholders::_1));\n'}
[6.246759] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.246808] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:838:128:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid executive_teleop::MoveFeedbackCallback(const Motion_FeedbackMessage&)\x1b[m\x1b[K\xe2\x80\x99 is private within this context\n'}
[6.246863] (executive_teleop) StderrLine: {'line': b'  838 | edbackMessage>(topic_name, 10, std::bind(&executive_teleop::\x1b[01;31m\x1b[KMoveFeedbackCallback\x1b[m\x1b[K,node,std::placeholders::_1));\n'}
[6.246911] (executive_teleop) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.246957] (executive_teleop) StderrLine: {'line': b'\n'}
[6.247003] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:619:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared private here\n'}
[6.247048] (executive_teleop) StderrLine: {'line': b'  619 | void \x1b[01;36m\x1b[KMoveFeedbackCallback\x1b[m\x1b[K(ff_msgs::action::Motion_FeedbackMessage const& fb) {\n'}
[6.247094] (executive_teleop) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.290119] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:844:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdock_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.290342] (executive_teleop) StderrLine: {'line': b'  844 |     \x1b[01;31m\x1b[Kdock_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::action::Dock_FeedbackMessage>(topic_name, 10, std::bind(&executive_teleop::DockFeedbbackCallback,node,std::placeholders::_1));\n'}
[6.290400] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.290450] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:844:126:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KDockFeedbbackCallback\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.290512] (executive_teleop) StderrLine: {'line': b'  844 | edbackMessage>(topic_name, 10, std::bind(&executive_teleop::\x1b[01;31m\x1b[KDockFeedbbackCallback\x1b[m\x1b[K,node,std::placeholders::_1));\n'}
[6.290564] (executive_teleop) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.290610] (executive_teleop) StderrLine: {'line': b'\n'}
[6.296135] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:859:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KSendNextCommand\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.296249] (executive_teleop) StderrLine: {'line': b'  859 |   if (!\x1b[01;31m\x1b[KSendNextCommand\x1b[m\x1b[K()) {\n'}
[6.296308] (executive_teleop) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.296362] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:864:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kspin()\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.296416] (executive_teleop) StderrLine: {'line': b'  864 |   \x1b[01;31m\x1b[Krclcpp::spin()\x1b[m\x1b[K;\n'}
[6.296466] (executive_teleop) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[6.296570] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.296628] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[6.296805] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::spin(rclcpp::node_interfaces::NodeBaseInterface::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.296871] (executive_teleop) StderrLine: {'line': b'   45 | \x1b[01;36m\x1b[Kspin\x1b[m\x1b[K(rclcpp::node_interfaces::NodeBaseInterface::SharedPtr node_ptr);\n'}
[6.296922] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[6.296969] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:45:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 0 provided\n'}
[6.297015] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::spin(rclcpp::Node::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.297061] (executive_teleop) StderrLine: {'line': b'   49 | \x1b[01;36m\x1b[Kspin\x1b[m\x1b[K(rclcpp::Node::SharedPtr node_ptr);\n'}
[6.297106] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[6.297150] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:49:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 0 provided\n'}
[6.313510] (-) TimerEvent: {}
[6.413768] (-) TimerEvent: {}
[6.514063] (-) TimerEvent: {}
[6.614333] (-) TimerEvent: {}
[6.714595] (-) TimerEvent: {}
[6.814885] (-) TimerEvent: {}
[6.915154] (-) TimerEvent: {}
[7.015423] (-) TimerEvent: {}
[7.115716] (-) TimerEvent: {}
[7.215980] (-) TimerEvent: {}
[7.302622] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.302927] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.303039] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.303097] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.303210] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.303261] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.303312] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.303362] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.303412] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.303462] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.303511] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[7.303593] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.303645] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.303705] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.303765] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.303821] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.303880] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:775:64:\x1b[m\x1b[K   required from here\n'}
[7.303925] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.303977] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.304022] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.304067] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[7.304112] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[7.304157] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304208] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[7.304253] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.304298] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.304344] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/ratio:39\x1b[m\x1b[K,\n'}
[7.304389] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/chrono:39\x1b[m\x1b[K,\n'}
[7.304433] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:19\x1b[m\x1b[K:\n'}
[7.304478] (executive_teleop) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.304526] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>::_Callable<std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&, std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>, std::__invoke_result<std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&, const ff_msgs::msg::AckStamped_<std::allocator<void> >&> >; _Tp = void; _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304581] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304637] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304732] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304811] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304869] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.304922] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:775:64:\x1b[m\x1b[K   required from here\n'}
[7.304970] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305017] (executive_teleop) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[7.305063] (executive_teleop) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.305107] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[7.305151] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[7.305196] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.305244] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305306] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305360] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305458] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305514] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:775:64:\x1b[m\x1b[K   required from here\n'}
[7.305560] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305607] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[7.305651] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.305694] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305742] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[7.305786] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.305831] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.305876] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[7.305921] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.305968] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.306019] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[7.306064] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.306108] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.306156] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[7.306201] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.306245] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.306293] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[7.306339] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.306387] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.306435] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[7.306479] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.306523] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.316105] (-) TimerEvent: {}
[7.324836] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.324974] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.325155] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.325228] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.325280] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.325330] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.325376] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.325433] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.325480] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.325529] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.325575] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[7.325621] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.325672] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.325731] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.325876] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.325936] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.325998] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:823:82:\x1b[m\x1b[K   required from here\n'}
[7.326046] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.326099] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.326145] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.326193] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[7.326239] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[7.326283] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.326332] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[7.326376] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.326420] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.326470] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.326517] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[7.326562] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.326607] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.326656] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[7.326701] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.326745] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.326799] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[7.326844] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.326889] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.326937] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[7.326985] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.327030] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.327079] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[7.327124] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.327168] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.327217] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[7.327262] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.327307] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.327357] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[7.327402] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.327447] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.340955] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.341092] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.341150] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.341200] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.341247] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.341293] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.341339] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.341384] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.341431] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.341486] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.341536] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[7.341581] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.341631] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::FaultState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.341696] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::FaultState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.341754] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.341816] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.341869] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:830:74:\x1b[m\x1b[K   required from here\n'}
[7.341915] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.341963] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.342010] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.342059] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[7.342104] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[7.342150] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.342201] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[7.342246] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.342296] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.342362] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.342425] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[7.342474] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.342519] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.342568] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[7.342614] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.342659] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.342709] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[7.342756] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.342800] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.342851] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[7.342897] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.342942] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.342997] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[7.343044] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.343089] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.343157] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[7.343219] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.343265] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.343313] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[7.343394] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.343439] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.357122] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.357261] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.357463] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.357528] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.357580] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.357628] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.357674] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.357720] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.357766] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.357811] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.357856] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[7.357902] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.357962] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358027] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358090] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358155] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358209] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:838:82:\x1b[m\x1b[K   required from here\n'}
[7.358256] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358305] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.358355] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.358401] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[7.358446] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[7.358491] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358543] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[7.358588] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.358633] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.358679] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358730] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[7.358775] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.358819] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.358872] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[7.358918] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.358962] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.359009] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[7.359053] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.359097] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.359145] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[7.359189] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.359233] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.359284] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[7.359329] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.359373] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.359420] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[7.359464] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.359507] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.359555] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[7.359600] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.359647] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[7.416240] (-) TimerEvent: {}
[7.516527] (-) TimerEvent: {}
[7.616799] (-) TimerEvent: {}
[7.717084] (-) TimerEvent: {}
[7.817362] (-) TimerEvent: {}
[7.917695] (-) TimerEvent: {}
[8.017956] (-) TimerEvent: {}
[8.118232] (-) TimerEvent: {}
[8.218502] (-) TimerEvent: {}
[8.318908] (-) TimerEvent: {}
[8.419276] (-) TimerEvent: {}
[8.519547] (-) TimerEvent: {}
[8.619806] (-) TimerEvent: {}
[8.720065] (-) TimerEvent: {}
[8.820336] (-) TimerEvent: {}
[8.920595] (-) TimerEvent: {}
[9.020830] (-) TimerEvent: {}
[9.121079] (-) TimerEvent: {}
[9.221357] (-) TimerEvent: {}
[9.321616] (-) TimerEvent: {}
[9.421879] (-) TimerEvent: {}
[9.522154] (-) TimerEvent: {}
[9.622414] (-) TimerEvent: {}
[9.722675] (-) TimerEvent: {}
[9.822939] (-) TimerEvent: {}
[9.923203] (-) TimerEvent: {}
[10.023488] (-) TimerEvent: {}
[10.123747] (-) TimerEvent: {}
[10.224009] (-) TimerEvent: {}
[10.324297] (-) TimerEvent: {}
[10.424574] (-) TimerEvent: {}
[10.524825] (-) TimerEvent: {}
[10.625127] (-) TimerEvent: {}
[10.725472] (-) TimerEvent: {}
[10.825731] (-) TimerEvent: {}
[10.925984] (-) TimerEvent: {}
[11.026241] (-) TimerEvent: {}
[11.126524] (-) TimerEvent: {}
[11.147315] (executive_teleop) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/teleop_tool.dir/build.make:76: CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o] Error 1\n'}
[11.147579] (executive_teleop) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/teleop_tool.dir/all] Error 2\n'}
[11.147827] (executive_teleop) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[11.149640] (executive_teleop) CommandEnded: {'returncode': 2}
[11.226629] (-) TimerEvent: {}
[11.243852] (executive_teleop) JobEnded: {'identifier': 'executive_teleop', 'rc': 2}
[11.254464] (-) EventReactorShutdown: {}
