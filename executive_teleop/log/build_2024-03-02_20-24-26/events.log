[0.000000] (-) TimerEvent: {}
[0.000377] (executive_teleop) JobQueued: {'identifier': 'executive_teleop', 'dependencies': OrderedDict()}
[0.000550] (executive_teleop) JobStarted: {'identifier': 'executive_teleop'}
[0.079752] (executive_teleop) JobProgress: {'identifier': 'executive_teleop', 'progress': 'cmake'}
[0.080375] (executive_teleop) JobProgress: {'identifier': 'executive_teleop', 'progress': 'build'}
[0.080976] (executive_teleop) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop', '--', '-j12', '-l12'], 'cwd': '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'zyme'), ('ROS_PACKAGE_PATH', '/home/zyme/ros_ws/astrobee/install/pmc/share:/home/zyme/ros_ws/astrobee/install/camera/share'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/zyme/ros_ws/astrobee/install/states/lib:/home/zyme/ros_ws/astrobee/install/light_flow/lib:/home/zyme/ros_ws/astrobee/install/fam/lib:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/lib:/home/zyme/ros_ws/astrobee/install/perch/lib:/home/zyme/ros_ws/astrobee/install/framestore/lib:/home/zyme/ros_ws/astrobee/install/dock/lib:/home/zyme/ros_ws/astrobee/install/ctl/lib:/home/zyme/ros_ws/astrobee/install/arm/lib:/home/zyme/ros_ws/astrobee/install/access_control/lib:/home/zyme/ros_ws/astrobee/install/ff_util/lib:/home/zyme/ros_ws/astrobee/install/msg_conversions/lib:/home/zyme/ros_ws/astrobee/install/jsonloader/lib:/home/zyme/ros_ws/astrobee/install/ff_msgs/lib:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs/lib:/home/zyme/ros_ws/astrobee/install/config_reader/lib:/home/zyme/ros_ws/astrobee/install/ff_common/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/zyme'), ('OLDPWD', '/home/zyme/ros_ws/executive_teleop'), ('DESKTOP_SESSION', 'pop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'pop'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '2937'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('QT_QPA_PLATFORMTHEME', 'qt5ct'), ('COLCON_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'zyme'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/home/zyme/ros_ws/astrobee/install/pmc/lib/x86_64-linux-gnu/pkgconfig:/home/zyme/ros_ws/astrobee/install/pmc/lib/pkgconfig:/home/zyme/ros_ws/astrobee/install/camera/lib/x86_64-linux-gnu/pkgconfig:/home/zyme/ros_ws/astrobee/install/camera/lib/pkgconfig'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'zyme'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_iss/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_granite/share:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer/share:/home/zyme/ros_ws/astrobee/install/astrobee_dock/share'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/zyme/ros_ws/astrobee/install/perch/bin:/home/zyme/ros_ws/astrobee/install/msg_conversions/bin:/home/zyme/ros_ws/astrobee/install/camera/bin:/opt/ros/humble/bin:/home/zyme/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/pop-os:@/tmp/.ICE-unix/2753,unix/pop-os:/tmp/.ICE-unix/2753'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/47a5ca85_a0bc_407a_9c37_63921ad8915b'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'pop:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'pop'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.133'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'pop'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/share/astrobee_gazebo/worlds:/home/zyme/ros_ws/astrobee/install/astrobee_iss/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30/share:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5/share:/home/zyme/ros_ws/astrobee/install/astrobee_granite/share:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer/share:/home/zyme/ros_ws/astrobee/install/astrobee_dock/share'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/zyme/ros_ws/executive_teleop/executive_teleop/build/executive_teleop'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-pop:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/home/zyme/ros_ws/astrobee/install/astrobee_gazebo/lib/astrobee_gazebo'), ('XDG_DATA_DIRS', '/usr/share/pop:/usr/share/gnome:/home/zyme/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/'), ('PYTHONPATH', '/home/zyme/ros_ws/astrobee/install/ff_msgs/local/lib/python3.10/dist-packages:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs/local/lib/python3.10/dist-packages:/home/zyme/ros_ws/astrobee/install/astrobee/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/zyme/ros_ws/astrobee/install/states:/home/zyme/ros_ws/astrobee/install/light_flow:/home/zyme/ros_ws/astrobee/install/signal_lights:/home/zyme/ros_ws/astrobee/install/fam:/home/zyme/ros_ws/astrobee/install/astrobee_gazebo:/opt/ros/humble:/home/zyme/ros_ws/astrobee/install/pmc:/home/zyme/ros_ws/astrobee/install/perch:/home/zyme/ros_ws/astrobee/install/framestore:/home/zyme/ros_ws/astrobee/install/dock:/home/zyme/ros_ws/astrobee/install/ctl:/home/zyme/ros_ws/astrobee/install/arm:/home/zyme/ros_ws/astrobee/install/access_control:/home/zyme/ros_ws/astrobee/install/ff_util:/home/zyme/ros_ws/astrobee/install/msg_conversions:/home/zyme/ros_ws/astrobee/install/jsonloader:/home/zyme/ros_ws/astrobee/install/ff_msgs:/home/zyme/ros_ws/astrobee/install/ff_hw_msgs:/home/zyme/ros_ws/astrobee/install/camera:/home/zyme/ros_ws/astrobee/install/config_reader:/home/zyme/ros_ws/astrobee/install/ff_common:/home/zyme/ros_ws/astrobee/install/description:/home/zyme/ros_ws/astrobee/install/astrobee_iss:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_8_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_41_5:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_30:/home/zyme/ros_ws/astrobee/install/astrobee_handrail_21_5:/home/zyme/ros_ws/astrobee/install/astrobee_granite:/home/zyme/ros_ws/astrobee/install/astrobee_freeflyer:/home/zyme/ros_ws/astrobee/install/astrobee_dock:/home/zyme/ros_ws/astrobee/install/astrobee')]), 'shell': False}
[0.098815] (-) TimerEvent: {}
[0.134029] (executive_teleop) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target teleop_tool\x1b[0m\n'}
[0.160759] (executive_teleop) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o\x1b[0m\n'}
[0.198927] (-) TimerEvent: {}
[0.299249] (-) TimerEvent: {}
[0.399702] (-) TimerEvent: {}
[0.500055] (-) TimerEvent: {}
[0.600756] (-) TimerEvent: {}
[0.701808] (-) TimerEvent: {}
[0.802363] (-) TimerEvent: {}
[0.902843] (-) TimerEvent: {}
[1.003208] (-) TimerEvent: {}
[1.103507] (-) TimerEvent: {}
[1.203775] (-) TimerEvent: {}
[1.304067] (-) TimerEvent: {}
[1.404332] (-) TimerEvent: {}
[1.504599] (-) TimerEvent: {}
[1.604866] (-) TimerEvent: {}
[1.705132] (-) TimerEvent: {}
[1.805406] (-) TimerEvent: {}
[1.905679] (-) TimerEvent: {}
[2.005950] (-) TimerEvent: {}
[2.106242] (-) TimerEvent: {}
[2.206514] (-) TimerEvent: {}
[2.306808] (-) TimerEvent: {}
[2.407107] (-) TimerEvent: {}
[2.507400] (-) TimerEvent: {}
[2.607682] (-) TimerEvent: {}
[2.707988] (-) TimerEvent: {}
[2.808269] (-) TimerEvent: {}
[2.908558] (-) TimerEvent: {}
[3.008870] (-) TimerEvent: {}
[3.109136] (-) TimerEvent: {}
[3.209405] (-) TimerEvent: {}
[3.309671] (-) TimerEvent: {}
[3.322217] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:26\x1b[m\x1b[K:\n'}
[3.323166] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:64:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.323260] (executive_teleop) StderrLine: {'line': b'   64 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(dock, false, "Send dock command");\n'}
[3.323325] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.323384] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:64:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.323452] (executive_teleop) StderrLine: {'line': b'   64 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(dock, false, "Send dock command");\n'}
[3.323508] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.323563] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:64:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.323619] (executive_teleop) StderrLine: {'line': b'   64 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(dock, false, "Send dock command");\n'}
[3.323674] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.323729] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.323785] (executive_teleop) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_face_forward, false, "Get face forward mode");\n'}
[3.323840] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.323895] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.323950] (executive_teleop) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_face_forward, false, "Get face forward mode");\n'}
[3.324004] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.324058] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:65:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.324113] (executive_teleop) StderrLine: {'line': b'   65 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_face_forward, false, "Get face forward mode");\n'}
[3.324167] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.324221] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:66:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.324276] (executive_teleop) StderrLine: {'line': b'   66 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_faults, false, "Get current faults");\n'}
[3.324335] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.324390] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:66:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.324444] (executive_teleop) StderrLine: {'line': b'   66 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_faults, false, "Get current faults");\n'}
[3.324498] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.324551] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:66:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.324604] (executive_teleop) StderrLine: {'line': b'   66 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_faults, false, "Get current faults");\n'}
[3.324657] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.324715] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:67:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.324770] (executive_teleop) StderrLine: {'line': b'   67 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_op_limits, false, "Get operating limits");\n'}
[3.324823] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.324876] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:67:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.324929] (executive_teleop) StderrLine: {'line': b'   67 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_op_limits, false, "Get operating limits");\n'}
[3.324983] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325036] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:67:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.325089] (executive_teleop) StderrLine: {'line': b'   67 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_op_limits, false, "Get operating limits");\n'}
[3.325142] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325194] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:68:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.325247] (executive_teleop) StderrLine: {'line': b'   68 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_planner, false, "Get current planner");\n'}
[3.325300] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325352] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:68:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.325411] (executive_teleop) StderrLine: {'line': b'   68 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_planner, false, "Get current planner");\n'}
[3.325467] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325519] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:68:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.325570] (executive_teleop) StderrLine: {'line': b'   68 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_planner, false, "Get current planner");\n'}
[3.325622] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325672] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:69:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.325725] (executive_teleop) StderrLine: {'line': b'   69 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_pose, false, "Get current robot position");\n'}
[3.325776] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325827] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:69:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.325884] (executive_teleop) StderrLine: {'line': b'   69 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_pose, false, "Get current robot position");\n'}
[3.325940] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.325991] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:69:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.326043] (executive_teleop) StderrLine: {'line': b'   69 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_pose, false, "Get current robot position");\n'}
[3.326094] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.326145] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:70:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.326196] (executive_teleop) StderrLine: {'line': b'   70 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_state, false, "Get current robot state");\n'}
[3.326247] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.326297] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:70:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.326348] (executive_teleop) StderrLine: {'line': b'   70 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_state, false, "Get current robot state");\n'}
[3.326401] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.326452] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:70:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.326503] (executive_teleop) StderrLine: {'line': b'   70 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(get_state, false, "Get current robot state");\n'}
[3.326553] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.326604] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:71:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.326655] (executive_teleop) StderrLine: {'line': b'   71 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(move, false, "Send move command");\n'}
[3.326705] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.326757] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:71:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.326807] (executive_teleop) StderrLine: {'line': b'   71 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(move, false, "Send move command");\n'}
[3.326857] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.326943] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:71:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.327015] (executive_teleop) StderrLine: {'line': b'   71 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(move, false, "Send move command");\n'}
[3.327072] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.327148] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:72:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.327207] (executive_teleop) StderrLine: {'line': b'   72 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(set_op_limits, false, "Send set operating limits");\n'}
[3.327259] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.327311] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:72:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.327363] (executive_teleop) StderrLine: {'line': b'   72 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(set_op_limits, false, "Send set operating limits");\n'}
[3.327415] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.327465] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:72:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.327516] (executive_teleop) StderrLine: {'line': b'   72 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(set_op_limits, false, "Send set operating limits");\n'}
[3.327567] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.327617] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:73:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.327673] (executive_teleop) StderrLine: {'line': b'   73 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(stop, false, "Send stop command");\n'}
[3.327724] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.327777] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:73:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.327830] (executive_teleop) StderrLine: {'line': b'   73 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(stop, false, "Send stop command");\n'}
[3.327881] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.327933] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:73:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.327985] (executive_teleop) StderrLine: {'line': b'   73 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(stop, false, "Send stop command");\n'}
[3.328036] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.328087] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:74:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.328140] (executive_teleop) StderrLine: {'line': b'   74 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(undock, false, "Send undock command");\n'}
[3.328192] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.328242] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:74:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.328293] (executive_teleop) StderrLine: {'line': b'   74 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(undock, false, "Send undock command");\n'}
[3.328343] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.328393] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:74:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.328447] (executive_teleop) StderrLine: {'line': b'   74 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(undock, false, "Send undock command");\n'}
[3.328502] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.328552] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:75:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.328604] (executive_teleop) StderrLine: {'line': b'   75 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(relative, false, "Position is relative to current point");\n'}
[3.328655] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.328705] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:75:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.328756] (executive_teleop) StderrLine: {'line': b'   75 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(relative, false, "Position is relative to current point");\n'}
[3.328805] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.328855] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:75:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.328906] (executive_teleop) StderrLine: {'line': b'   75 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(relative, false, "Position is relative to current point");\n'}
[3.328956] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329006] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:76:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.329057] (executive_teleop) StderrLine: {'line': b'   76 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(reset_bias, false, "Send initialize bias command");\n'}
[3.329112] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329163] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:76:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.329214] (executive_teleop) StderrLine: {'line': b'   76 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(reset_bias, false, "Send initialize bias command");\n'}
[3.329264] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329315] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:76:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.329366] (executive_teleop) StderrLine: {'line': b'   76 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(reset_bias, false, "Send initialize bias command");\n'}
[3.329416] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329466] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.329516] (executive_teleop) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(reset_ekf, false, "Send reset ekf command");\n'}
[3.329570] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329621] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.329671] (executive_teleop) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(reset_ekf, false, "Send reset ekf command");\n'}
[3.329721] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329771] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:77:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.329825] (executive_teleop) StderrLine: {'line': b'   77 | \x1b[01;31m\x1b[KDEFINE_bool\x1b[m\x1b[K(reset_ekf, false, "Send reset ekf command");\n'}
[3.329875] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.329929] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:79:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.329980] (executive_teleop) StderrLine: {'line': b'   79 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(accel, -1.0, "Desired acceleration");\n'}
[3.330031] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.330081] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:79:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KfLD\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[3.330141] (executive_teleop) StderrLine: {'line': b'   79 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(accel, -1.0, "Desired acceleration");\n'}
[3.330192] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.330243] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:80:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.330294] (executive_teleop) StderrLine: {'line': b'   80 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(alpha, -1.0, "Desired angular acceleration");\n'}
[3.330345] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.330395] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:80:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KfLD\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[3.330451] (executive_teleop) StderrLine: {'line': b'   80 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(alpha, -1.0, "Desired angular acceleration");\n'}
[3.330502] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.330552] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.330603] (executive_teleop) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(omega, -1.0, "Desired angular velocity");\n'}
[3.330654] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.330704] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:81:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KfLD\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[3.330759] (executive_teleop) StderrLine: {'line': b'   81 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(omega, -1.0, "Desired angular velocity");\n'}
[3.330811] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.330861] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:82:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.330970] (executive_teleop) StderrLine: {'line': b'   82 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(vel, -1.0, "Desired velocity");\n'}
[3.331026] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331078] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:82:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KfLD\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[3.331130] (executive_teleop) StderrLine: {'line': b'   82 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(vel, -1.0, "Desired velocity");\n'}
[3.331181] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331232] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:83:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.331283] (executive_teleop) StderrLine: {'line': b'   83 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(collision_distance, -1.0, "Desired collision distance");\n'}
[3.331334] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331385] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:83:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KfLD\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[3.331436] (executive_teleop) StderrLine: {'line': b'   83 | \x1b[01;31m\x1b[KDEFINE_double\x1b[m\x1b[K(collision_distance, -1.0, "Desired collision distance");\n'}
[3.331487] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331538] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:85:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.331589] (executive_teleop) StderrLine: {'line': b'   85 | \x1b[01;31m\x1b[KDEFINE_int32\x1b[m\x1b[K(berth, 1, "Berth to dock in");\n'}
[3.331639] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331689] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:85:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KfLI\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[3.331771] (executive_teleop) StderrLine: {'line': b'   85 | \x1b[01;31m\x1b[KDEFINE_int32\x1b[m\x1b[K(berth, 1, "Berth to dock in");\n'}
[3.331865] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331954] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.332010] (executive_teleop) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(att, "", "Desired attitude in angle-axis format \'angle X Y Z\'");\n'}
[3.332062] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.332213] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:87:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.332269] (executive_teleop) StderrLine: {'line': b'   87 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(att, "", "Desired attitude in angle-axis format \'angle X Y Z\'");\n'}
[3.332320] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.332374] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:88:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.332425] (executive_teleop) StderrLine: {'line': b'   88 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(set_check_zones, "", "Enable keepout zone checking");\n'}
[3.332476] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.332526] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:88:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.332578] (executive_teleop) StderrLine: {'line': b'   88 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(set_check_zones, "", "Enable keepout zone checking");\n'}
[3.332629] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.332679] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:89:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.332734] (executive_teleop) StderrLine: {'line': b'   89 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(set_face_forward, "", "Plan in face-forward mode, on or off");\n'}
[3.332786] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.332855] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:89:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.332943] (executive_teleop) StderrLine: {'line': b'   89 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(set_face_forward, "", "Plan in face-forward mode, on or off");\n'}
[3.333010] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333061] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:90:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333112] (executive_teleop) StderrLine: {'line': b'   90 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(mode, "", "Flight mode");\n'}
[3.333163] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333213] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:90:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.333263] (executive_teleop) StderrLine: {'line': b'   90 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(mode, "", "Flight mode");\n'}
[3.333314] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333364] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333415] (executive_teleop) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(ns, "", "Robot namespace");\n'}
[3.333470] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333520] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:91:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.333571] (executive_teleop) StderrLine: {'line': b'   91 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(ns, "", "Robot namespace");\n'}
[3.333621] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333672] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:92:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333723] (executive_teleop) StderrLine: {'line': b'   92 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(set_planner, "", "Path planning algorithm");\n'}
[3.333774] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333824] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:92:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.333874] (executive_teleop) StderrLine: {'line': b'   92 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(set_planner, "", "Path planning algorithm");\n'}
[3.333924] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333974] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:93:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Knamespace\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.334025] (executive_teleop) StderrLine: {'line': b'   93 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(pos, "", "Desired position in cartesian format \'X Y Z\'");\n'}
[3.334076] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.334126] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:93:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing-declaration for non-member at class scope\n'}
[3.334176] (executive_teleop) StderrLine: {'line': b'   93 | \x1b[01;31m\x1b[KDEFINE_string\x1b[m\x1b[K(pos, "", "Desired position in cartesian format \'X Y Z\'");\n'}
[3.334248] (executive_teleop) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.338265] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop::executive_teleop(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.338550] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:113:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_face_forward\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kget_face_forward\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.338632] (executive_teleop) StderrLine: {'line': b'  113 |   get_face_forward = \x1b[01;31m\x1b[KFLAGS_get_face_forward\x1b[m\x1b[K;\n'}
[3.338691] (executive_teleop) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.338744] (executive_teleop) StderrLine: {'line': b'      |                      \x1b[32m\x1b[Kget_face_forward\x1b[m\x1b[K\n'}
[3.349079] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:114:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_op_limits\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kget_op_limits\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.349210] (executive_teleop) StderrLine: {'line': b'  114 |   get_op_limits = \x1b[01;31m\x1b[KFLAGS_get_op_limits\x1b[m\x1b[K;\n'}
[3.349269] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.349327] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kget_op_limits\x1b[m\x1b[K\n'}
[3.359026] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:115:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_planner\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kget_planner\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.359193] (executive_teleop) StderrLine: {'line': b'  115 |   get_planner = \x1b[01;31m\x1b[KFLAGS_get_planner\x1b[m\x1b[K;\n'}
[3.359258] (executive_teleop) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.359332] (executive_teleop) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kget_planner\x1b[m\x1b[K\n'}
[3.370635] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:116:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_state\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.371054] (executive_teleop) StderrLine: {'line': b'  116 |   get_state = \x1b[01;31m\x1b[KFLAGS_get_state\x1b[m\x1b[K;\n'}
[3.371137] (executive_teleop) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.381021] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:117:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_faults\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kget_faults\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.381186] (executive_teleop) StderrLine: {'line': b'  117 |   get_faults =  \x1b[01;31m\x1b[KFLAGS_get_faults\x1b[m\x1b[K;\n'}
[3.381246] (executive_teleop) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.381300] (executive_teleop) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kget_faults\x1b[m\x1b[K\n'}
[3.390731] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:118:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_reset_bias\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kreset_bias\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.390876] (executive_teleop) StderrLine: {'line': b'  118 |   reset_bias = \x1b[01;31m\x1b[KFLAGS_reset_bias\x1b[m\x1b[K;\n'}
[3.391004] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.391062] (executive_teleop) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kreset_bias\x1b[m\x1b[K\n'}
[3.407566] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:119:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_reset_ekf\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.407748] (executive_teleop) StderrLine: {'line': b'  119 |   reset_ekf = \x1b[01;31m\x1b[KFLAGS_reset_ekf\x1b[m\x1b[K;\n'}
[3.407807] (executive_teleop) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.409768] (-) TimerEvent: {}
[3.421046] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:123:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_op_limits\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_op_limits\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.421285] (executive_teleop) StderrLine: {'line': b'  123 |   set_op_limits = \x1b[01;31m\x1b[KFLAGS_set_op_limits\x1b[m\x1b[K;\n'}
[3.421380] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.421458] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kset_op_limits\x1b[m\x1b[K\n'}
[3.429501] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:127:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_dock\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.429743] (executive_teleop) StderrLine: {'line': b'  127 |   if (\x1b[01;31m\x1b[KFLAGS_dock\x1b[m\x1b[K) modeMove++;\n'}
[3.429807] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.439070] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:128:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_move\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.439390] (executive_teleop) StderrLine: {'line': b'  128 |   if (\x1b[01;31m\x1b[KFLAGS_move\x1b[m\x1b[K) modeMove++;\n'}
[3.439453] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.448056] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:129:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_stop\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.448200] (executive_teleop) StderrLine: {'line': b'  129 |   if (\x1b[01;31m\x1b[KFLAGS_stop\x1b[m\x1b[K) modeMove++;\n'}
[3.448259] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.459769] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:130:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_undock\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.459929] (executive_teleop) StderrLine: {'line': b'  130 |   if (\x1b[01;31m\x1b[KFLAGS_undock\x1b[m\x1b[K) modeMove++;\n'}
[3.459996] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.470014] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:131:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_pose\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.470410] (executive_teleop) StderrLine: {'line': b'  131 |   if (\x1b[01;31m\x1b[KFLAGS_get_pose\x1b[m\x1b[K) modeGetInfo++;\n'}
[3.470519] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.481929] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:139:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_check_zones\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_check_zones\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.482177] (executive_teleop) StderrLine: {'line': b'  139 |   if (\x1b[01;31m\x1b[KFLAGS_set_check_zones\x1b[m\x1b[K != "") modeGetInfo++;\n'}
[3.482247] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.482304] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_check_zones\x1b[m\x1b[K\n'}
[3.494137] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:140:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_planner\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_planner\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.494363] (executive_teleop) StderrLine: {'line': b'  140 |   if (\x1b[01;31m\x1b[KFLAGS_set_planner\x1b[m\x1b[K != "") modeGetInfo++;\n'}
[3.494468] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.494572] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_planner\x1b[m\x1b[K\n'}
[3.506560] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:141:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_face_forward\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_face_forward\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.506774] (executive_teleop) StderrLine: {'line': b'  141 |   if (\x1b[01;31m\x1b[KFLAGS_set_face_forward\x1b[m\x1b[K != "") modeGetInfo++;\n'}
[3.506880] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.507061] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_face_forward\x1b[m\x1b[K\n'}
[3.507124] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:149:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.507182] (executive_teleop) StderrLine: {'line': b'  149 |     return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.507236] (executive_teleop) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.507288] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:154:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.507341] (executive_teleop) StderrLine: {'line': b'  154 |     return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.507392] (executive_teleop) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.509892] (-) TimerEvent: {}
[3.515184] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:162:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_move\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.515423] (executive_teleop) StderrLine: {'line': b'  162 |   if (\x1b[01;31m\x1b[KFLAGS_move\x1b[m\x1b[K && FLAGS_pos.empty() && FLAGS_att.empty()) {\n'}
[3.515520] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.525184] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:162:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_pos\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.525387] (executive_teleop) StderrLine: {'line': b'  162 |   if (FLAGS_move && \x1b[01;31m\x1b[KFLAGS_pos\x1b[m\x1b[K.empty() && FLAGS_att.empty()) {\n'}
[3.525448] (executive_teleop) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.534243] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:162:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_att\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.534530] (executive_teleop) StderrLine: {'line': b'  162 |   if (FLAGS_move && FLAGS_pos.empty() && \x1b[01;31m\x1b[KFLAGS_att\x1b[m\x1b[K.empty()) {\n'}
[3.534710] (executive_teleop) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.534775] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:164:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.534845] (executive_teleop) StderrLine: {'line': b'  164 |     return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.534925] (executive_teleop) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.543038] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:169:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_mode\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.543256] (executive_teleop) StderrLine: {'line': b'  169 |     if (\x1b[01;31m\x1b[KFLAGS_mode\x1b[m\x1b[K == "" || FLAGS_accel == -1 || FLAGS_alpha == -1 ||\n'}
[3.543321] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.551536] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:169:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_accel\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.551781] (executive_teleop) StderrLine: {'line': b'  169 |     if (FLAGS_mode == "" || \x1b[01;31m\x1b[KFLAGS_accel\x1b[m\x1b[K == -1 || FLAGS_alpha == -1 ||\n'}
[3.551887] (executive_teleop) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.560845] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:169:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_alpha\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.561035] (executive_teleop) StderrLine: {'line': b'  169 |     if (FLAGS_mode == "" || FLAGS_accel == -1 || \x1b[01;31m\x1b[KFLAGS_alpha\x1b[m\x1b[K == -1 ||\n'}
[3.561102] (executive_teleop) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.569032] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:170:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_omega\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.569210] (executive_teleop) StderrLine: {'line': b'  170 |         \x1b[01;31m\x1b[KFLAGS_omega\x1b[m\x1b[K == -1 || FLAGS_vel == -1) {\n'}
[3.569276] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.575887] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:170:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_vel\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.576011] (executive_teleop) StderrLine: {'line': b'  170 |         FLAGS_omega == -1 || \x1b[01;31m\x1b[KFLAGS_vel\x1b[m\x1b[K == -1) {\n'}
[3.576073] (executive_teleop) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.576207] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:173:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.576292] (executive_teleop) StderrLine: {'line': b'  173 |       return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.576352] (executive_teleop) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.586859] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:178:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_check_zones\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_check_zones\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.587027] (executive_teleop) StderrLine: {'line': b'  178 |   if (\x1b[01;31m\x1b[KFLAGS_set_check_zones\x1b[m\x1b[K != "") {\n'}
[3.587103] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.587163] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_check_zones\x1b[m\x1b[K\n'}
[3.587326] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:182:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.587412] (executive_teleop) StderrLine: {'line': b'  182 |       return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.587471] (executive_teleop) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.597862] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:188:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_face_forward\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_face_forward\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.598092] (executive_teleop) StderrLine: {'line': b'  188 |   if (\x1b[01;31m\x1b[KFLAGS_set_face_forward\x1b[m\x1b[K != "") {\n'}
[3.598190] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.598280] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_face_forward\x1b[m\x1b[K\n'}
[3.598366] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:191:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.598458] (executive_teleop) StderrLine: {'line': b'  191 |       return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.598543] (executive_teleop) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.609903] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:197:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_planner\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_planner\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.610053] (-) TimerEvent: {}
[3.610142] (executive_teleop) StderrLine: {'line': b'  197 |   if (\x1b[01;31m\x1b[KFLAGS_set_planner\x1b[m\x1b[K != "") {\n'}
[3.610210] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.610267] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_planner\x1b[m\x1b[K\n'}
[3.619073] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:225:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kack_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.619240] (executive_teleop) StderrLine: {'line': b'  225 |   \x1b[01;31m\x1b[Kack_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::msg::AckStamped>(TOPIC_MANAGEMENT_ACK, 10,std::bind(&executive_teleop::AckCallback,node,std::placeholders::_1));\n'}
[3.619304] (executive_teleop) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.668352] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:236:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.668523] (executive_teleop) StderrLine: {'line': b'  236 |       return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.668583] (executive_teleop) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.678442] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:242:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_pose\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.678833] (executive_teleop) StderrLine: {'line': b'  242 |   if (\x1b[01;31m\x1b[KFLAGS_get_pose\x1b[m\x1b[K || FLAGS_move) {\n'}
[3.678971] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.688018] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:242:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_move\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.688262] (executive_teleop) StderrLine: {'line': b'  242 |   if (FLAGS_get_pose || \x1b[01;31m\x1b[KFLAGS_move\x1b[m\x1b[K) {\n'}
[3.688350] (executive_teleop) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.695806] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:243:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.695957] (executive_teleop) StderrLine: {'line': b'  243 |     std::string ns = \x1b[01;31m\x1b[KFLAGS_ns\x1b[m\x1b[K;\n'}
[3.696019] (executive_teleop) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.697945] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:252:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.698034] (executive_teleop) StderrLine: {'line': b'  252 |       return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.698102] (executive_teleop) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.710187] (-) TimerEvent: {}
[3.710547] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:256:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_get_pose\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.710677] (executive_teleop) StderrLine: {'line': b'  256 |   if (\x1b[01;31m\x1b[KFLAGS_get_pose\x1b[m\x1b[K) {\n'}
[3.710740] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.711839] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:267:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.711935] (executive_teleop) StderrLine: {'line': b'  267 |       return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.711995] (executive_teleop) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.722859] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:273:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kagent_state_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.723020] (executive_teleop) StderrLine: {'line': b'  273 |     \x1b[01;31m\x1b[Kagent_state_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::msg::AgentStateStamped>(TOPIC_MANAGEMENT_EXEC_AGENT_STATE,\n'}
[3.723084] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.806898] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:280:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfault_state_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.807062] (executive_teleop) StderrLine: {'line': b'  280 |     \x1b[01;31m\x1b[Kfault_state_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::msg::FaultState>(TOPIC_MANAGEMENT_SYS_MONITOR_STATE,\n'}
[3.807125] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.810288] (-) TimerEvent: {}
[3.863570] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:285:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_move\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.863735] (executive_teleop) StderrLine: {'line': b'  285 |   if (\x1b[01;31m\x1b[KFLAGS_move\x1b[m\x1b[K) {\n'}
[3.863797] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.872012] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:288:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmove_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.872304] (executive_teleop) StderrLine: {'line': b'  288 |     \x1b[01;31m\x1b[Kmove_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::action::Motion_FeedbackMessage>(topic_name, 10, std::bind(&executive_teleop::MoveFeedbackCallback,node,std::placeholders::_1));\n'}
[3.872372] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.910393] (-) TimerEvent: {}
[3.927827] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:291:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_dock\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.927978] (executive_teleop) StderrLine: {'line': b'  291 |   if (\x1b[01;31m\x1b[KFLAGS_dock\x1b[m\x1b[K || FLAGS_undock) {\n'}
[3.928039] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.937258] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:291:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_undock\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.937800] (executive_teleop) StderrLine: {'line': b'  291 |   if (FLAGS_dock || \x1b[01;31m\x1b[KFLAGS_undock\x1b[m\x1b[K) {\n'}
[3.937901] (executive_teleop) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.945757] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:294:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdock_sub\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.945911] (executive_teleop) StderrLine: {'line': b'  294 |     \x1b[01;31m\x1b[Kdock_sub\x1b[m\x1b[K = node->create_subscription<ff_msgs::action::Dock_FeedbackMessage>(topic_name, 10, std::bind(&executive_teleop::DockFeedbbackCallback,node,std::placeholders::_1));\n'}
[3.945974] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.946029] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:294:126:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KDockFeedbbackCallback\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.946085] (executive_teleop) StderrLine: {'line': b'  294 | edbackMessage>(topic_name, 10, std::bind(&executive_teleop::\x1b[01;31m\x1b[KDockFeedbbackCallback\x1b[m\x1b[K,node,std::placeholders::_1));\n'}
[3.946148] (executive_teleop) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.946297] (executive_teleop) StderrLine: {'line': b'\n'}
[3.946366] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:303:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.946424] (executive_teleop) StderrLine: {'line': b'  303 |         return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.946478] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.946536] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:310:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturning a value from a constructor\n'}
[3.946589] (executive_teleop) StderrLine: {'line': b'  310 |     return \x1b[01;31m\x1b[K1\x1b[m\x1b[K;\n'}
[3.946640] (executive_teleop) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.962425] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool executive_teleop::SendMobilityCommand()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.962582] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:466:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_dock\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.962647] (executive_teleop) StderrLine: {'line': b'  466 |   if (\x1b[01;31m\x1b[KFLAGS_dock\x1b[m\x1b[K) {\n'}
[3.962706] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.973123] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:473:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_berth\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.973281] (executive_teleop) StderrLine: {'line': b'  473 |     cmd.args[0].i = \x1b[01;31m\x1b[KFLAGS_berth\x1b[m\x1b[K;\n'}
[3.973341] (executive_teleop) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.980410] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:476:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_move\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.980515] (executive_teleop) StderrLine: {'line': b'  476 |   if (\x1b[01;31m\x1b[KFLAGS_move\x1b[m\x1b[K) {\n'}
[3.980577] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.990523] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:485:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_relative\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.990680] (executive_teleop) StderrLine: {'line': b'  485 |     if (\x1b[01;31m\x1b[KFLAGS_relative\x1b[m\x1b[K) {\n'}
[3.990741] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.997096] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:486:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.997199] (executive_teleop) StderrLine: {'line': b'  486 |       cmd.args[0].s = (\x1b[01;31m\x1b[KFLAGS_ns\x1b[m\x1b[K.empty() ? "body" : FLAGS_ns + "/" + std::string(FRAME_NAME_BODY));\n'}
[3.997259] (executive_teleop) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.007255] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:499:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_relative\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.007410] (executive_teleop) StderrLine: {'line': b'  499 |     if (\x1b[01;31m\x1b[KFLAGS_relative\x1b[m\x1b[K) {\n'}
[4.007471] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.010488] (-) TimerEvent: {}
[4.014083] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:510:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_pos\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.014200] (executive_teleop) StderrLine: {'line': b'  510 |     std::string str_pos = \x1b[01;31m\x1b[KFLAGS_pos\x1b[m\x1b[K;\n'}
[4.014260] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.023650] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:533:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_att\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.023808] (executive_teleop) StderrLine: {'line': b'  533 |     if (\x1b[01;31m\x1b[KFLAGS_att\x1b[m\x1b[K.empty()) {\n'}
[4.023869] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.032804] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:534:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_relative\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.033009] (executive_teleop) StderrLine: {'line': b'  534 |       if (\x1b[01;31m\x1b[KFLAGS_relative\x1b[m\x1b[K) {\n'}
[4.033090] (executive_teleop) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.068908] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:589:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_stop\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.069355] (executive_teleop) StderrLine: {'line': b'  589 |   if (\x1b[01;31m\x1b[KFLAGS_stop\x1b[m\x1b[K) {\n'}
[4.069449] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.079151] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:594:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_undock\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.079315] (executive_teleop) StderrLine: {'line': b'  594 |   if (\x1b[01;31m\x1b[KFLAGS_undock\x1b[m\x1b[K) {\n'}
[4.079386] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.093785] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool executive_teleop::SendSetCheckZones()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.093937] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:648:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_check_zones\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_check_zones\x1b[m\x1b[K\xe2\x80\x99?\n'}
[4.094000] (executive_teleop) StderrLine: {'line': b'  648 |   if (\x1b[01;31m\x1b[KFLAGS_set_check_zones\x1b[m\x1b[K == "on") {\n'}
[4.094055] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.094107] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_check_zones\x1b[m\x1b[K\n'}
[4.106490] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool executive_teleop::SendSetFaceForward()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.106641] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:675:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_face_forward\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_face_forward\x1b[m\x1b[K\xe2\x80\x99?\n'}
[4.106715] (executive_teleop) StderrLine: {'line': b'  675 |   if (\x1b[01;31m\x1b[KFLAGS_set_face_forward\x1b[m\x1b[K == "on") {\n'}
[4.106772] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.106824] (executive_teleop) StderrLine: {'line': b'      |       \x1b[32m\x1b[Kset_face_forward\x1b[m\x1b[K\n'}
[4.110594] (-) TimerEvent: {}
[4.114664] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool executive_teleop::SendSetOpLimits()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.114803] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:707:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_mode\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.114865] (executive_teleop) StderrLine: {'line': b'  707 |   cmd.args[1].s = \x1b[01;31m\x1b[KFLAGS_mode\x1b[m\x1b[K;\n'}
[4.114934] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[4.123711] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:712:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_vel\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.123867] (executive_teleop) StderrLine: {'line': b'  712 |   cmd.args[2].f = \x1b[01;31m\x1b[KFLAGS_vel\x1b[m\x1b[K;\n'}
[4.123926] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.131824] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:716:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_accel\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.131980] (executive_teleop) StderrLine: {'line': b'  716 |   cmd.args[3].f = \x1b[01;31m\x1b[KFLAGS_accel\x1b[m\x1b[K;\n'}
[4.132043] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.142757] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:720:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_omega\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.142937] (executive_teleop) StderrLine: {'line': b'  720 |   cmd.args[4].f = \x1b[01;31m\x1b[KFLAGS_omega\x1b[m\x1b[K;\n'}
[4.143007] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.151412] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:724:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_alpha\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.151629] (executive_teleop) StderrLine: {'line': b'  724 |   cmd.args[5].f = \x1b[01;31m\x1b[KFLAGS_alpha\x1b[m\x1b[K;\n'}
[4.151694] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.168054] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:728:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_collision_distance\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.168281] (executive_teleop) StderrLine: {'line': b'  728 |   cmd.args[6].f = \x1b[01;31m\x1b[KFLAGS_collision_distance\x1b[m\x1b[K;\n'}
[4.168343] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.180406] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool executive_teleop::SendSetPlanner()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.180558] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:751:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFLAGS_set_planner\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kset_planner\x1b[m\x1b[K\xe2\x80\x99?\n'}
[4.180622] (executive_teleop) StderrLine: {'line': b'  751 |   cmd.args[0].s = \x1b[01;31m\x1b[KFLAGS_set_planner\x1b[m\x1b[K;\n'}
[4.180686] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.180742] (executive_teleop) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kset_planner\x1b[m\x1b[K\n'}
[4.186269] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.186477] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:870:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemporary of non-literal type \xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop\x1b[m\x1b[K\xe2\x80\x99 in a constant expression\n'}
[4.186628] (executive_teleop) StderrLine: {'line': b'  870 |   rclcpp::spin(std::make_shared<\x1b[01;31m\x1b[Kexecutive_teleop(argc,argv)\x1b[m\x1b[K>());\n'}
[4.186741] (executive_teleop) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.186846] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:60:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop\x1b[m\x1b[K\xe2\x80\x99 is not literal because:\n'}
[4.186996] (executive_teleop) StderrLine: {'line': b'   60 | class \x1b[01;36m\x1b[Kexecutive_teleop\x1b[m\x1b[K : public rclcpp::Node {\n'}
[4.187069] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.187126] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:60:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop\x1b[m\x1b[K\xe2\x80\x99 has a non-trivial destructor\n'}
[4.187185] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:870:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmake_shared<executive_teleop(argc, argv)>()\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.187243] (executive_teleop) StderrLine: {'line': b'  870 |   rclcpp::spin(\x1b[01;31m\x1b[Kstd::make_shared<executive_teleop(argc,argv)>()\x1b[m\x1b[K);\n'}
[4.187296] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[4.187365] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[4.187418] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:21\x1b[m\x1b[K:\n'}
[4.187539] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:875:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::shared_ptr<_Tp> std::make_shared(_Args&& ...)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.187599] (executive_teleop) StderrLine: {'line': b'  875 |     \x1b[01;36m\x1b[Kmake_shared\x1b[m\x1b[K(_Args&&... __args)\n'}
[4.187684] (executive_teleop) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.187759] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:875:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.187858] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:870:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::shared_ptr<_Tp> std::make_shared(_Args&& ...)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.187955] (executive_teleop) StderrLine: {'line': b'  870 |   rclcpp::spin(\x1b[01;31m\x1b[Kstd::make_shared<executive_teleop(argc,argv)>()\x1b[m\x1b[K);\n'}
[4.188045] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[4.188137] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:870:61:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a type, got \xe2\x80\x98\x1b[01m\x1b[Kexecutive_teleop(argc, argv)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.210735] (-) TimerEvent: {}
[4.311026] (-) TimerEvent: {}
[4.411380] (-) TimerEvent: {}
[4.511786] (-) TimerEvent: {}
[4.612058] (-) TimerEvent: {}
[4.712333] (-) TimerEvent: {}
[4.812610] (-) TimerEvent: {}
[4.912889] (-) TimerEvent: {}
[5.013178] (-) TimerEvent: {}
[5.113418] (-) TimerEvent: {}
[5.213688] (-) TimerEvent: {}
[5.313932] (-) TimerEvent: {}
[5.370837] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[5.371328] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[5.371778] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.371991] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.372081] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.372169] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.372255] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.372342] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.372433] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.372519] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.372605] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[5.372698] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.372798] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.372904] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.373003] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.373103] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.373206] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:225:64:\x1b[m\x1b[K   required from here\n'}
[5.373293] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.373382] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[5.373468] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.373553] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[5.373639] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[5.373726] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.373815] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[5.373900] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.373986] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.374075] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/ratio:39\x1b[m\x1b[K,\n'}
[5.374162] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/chrono:39\x1b[m\x1b[K,\n'}
[5.374247] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:19\x1b[m\x1b[K:\n'}
[5.374333] (executive_teleop) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.374424] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>::_Callable<std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&, std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>, std::__invoke_result<std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&, const ff_msgs::msg::AckStamped_<std::allocator<void> >&> >; _Tp = void; _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.374518] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.374608] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.374716] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.374818] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.374957] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375036] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:225:64:\x1b[m\x1b[K   required from here\n'}
[5.375089] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375142] (executive_teleop) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[5.375194] (executive_teleop) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.375245] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[5.375296] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[5.375346] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.375404] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375465] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AckStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375533] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375594] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AckStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AckStamped_<std::allocator<void> >, ff_msgs::msg::AckStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AckStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375658] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:225:64:\x1b[m\x1b[K   required from here\n'}
[5.375712] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375766] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[5.375819] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.375871] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.375928] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[5.375980] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.376031] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.376083] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[5.376134] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.376184] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.376237] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[5.376288] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.376338] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.376390] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[5.376442] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.376492] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AckStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.376544] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[5.376597] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.376648] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::msg::AckStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.376700] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[5.376750] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.376800] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[5.398587] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[5.398847] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[5.398959] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.399038] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.399107] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.399159] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.399263] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.399316] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.399381] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.399431] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.399481] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[5.399530] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.399596] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.399665] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.399736] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.399800] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::AgentStateStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::AgentStateStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.399869] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:273:81:\x1b[m\x1b[K   required from here\n'}
[5.399920] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.399974] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[5.400024] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.400074] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[5.400124] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[5.400174] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.400227] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[5.400277] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.400326] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.400376] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.400432] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[5.400482] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.400531] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.400592] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[5.400642] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.400691] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.400742] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[5.400792] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.400840] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.400892] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[5.400942] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.400991] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.401046] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[5.401095] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.401145] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.401197] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[5.401247] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.401296] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::msg::AgentStateStamped_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.401351] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[5.401401] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.401451] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[5.414413] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[5.414549] (-) TimerEvent: {}
[5.414630] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[5.414728] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.414803] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.414921] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.415004] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.415056] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.415108] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.415160] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.415211] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.415261] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[5.415311] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.415379] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::msg::FaultState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.415453] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::msg::FaultState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.415517] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.415580] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::msg::FaultState_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void>, ff_msgs::msg::FaultState_<std::allocator<void> >, ff_msgs::msg::FaultState_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::msg::FaultState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.415645] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:280:74:\x1b[m\x1b[K   required from here\n'}
[5.415699] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.415762] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[5.415819] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.415875] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[5.415931] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[5.415986] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416045] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[5.416100] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.416155] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.416211] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416269] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[5.416324] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.416378] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416441] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[5.416495] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.416550] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416613] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[5.416667] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.416721] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416779] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[5.416833] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.416888] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.416948] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[5.417003] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.417056] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::msg::FaultState_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.417113] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[5.417168] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.417223] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::msg::FaultState_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.417279] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[5.417334] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.417387] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[5.429994] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[5.430368] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[5.430436] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.430492] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.430543] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.430594] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.430644] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.430693] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.430743] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.430792] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.430840] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:29\x1b[m\x1b[K:\n'}
[5.430922] (executive_teleop) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.431006] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431087] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431153] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431227] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >; CallbackT = std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void>, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431294] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:288:82:\x1b[m\x1b[K   required from here\n'}
[5.431346] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>::function(std::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431400] (executive_teleop) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[5.431451] (executive_teleop) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.431501] (executive_teleop) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[5.431552] (executive_teleop) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zyme/ros_ws/executive_teleop/executive_teleop/src/teleop_tool.cc:20\x1b[m\x1b[K:\n'}
[5.431601] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431654] (executive_teleop) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[5.431705] (executive_teleop) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.431754] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.431804] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.431857] (executive_teleop) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[5.431907] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.431957] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.432017] (executive_teleop) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[5.432068] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.432117] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.432173] (executive_teleop) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[5.432223] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.432272] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.432328] (executive_teleop) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[5.432378] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.432428] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.432480] (executive_teleop) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[5.432530] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.432580] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (executive_teleop::*(std::shared_ptr<rclcpp::Node>, std::_Placeholder<1>))(const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.432632] (executive_teleop) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[5.432682] (executive_teleop) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.432732] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const ff_msgs::action::Motion_FeedbackMessage_<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.432783] (executive_teleop) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[5.432833] (executive_teleop) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.432882] (executive_teleop) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[5.514683] (-) TimerEvent: {}
[5.614970] (-) TimerEvent: {}
[5.715237] (-) TimerEvent: {}
[5.815527] (-) TimerEvent: {}
[5.915789] (-) TimerEvent: {}
[6.016080] (-) TimerEvent: {}
[6.116368] (-) TimerEvent: {}
[6.216713] (-) TimerEvent: {}
[6.316997] (-) TimerEvent: {}
[6.417302] (-) TimerEvent: {}
[6.517585] (-) TimerEvent: {}
[6.617891] (-) TimerEvent: {}
[6.718170] (-) TimerEvent: {}
[6.818466] (-) TimerEvent: {}
[6.918789] (-) TimerEvent: {}
[7.019074] (-) TimerEvent: {}
[7.119378] (-) TimerEvent: {}
[7.219680] (-) TimerEvent: {}
[7.319958] (-) TimerEvent: {}
[7.420293] (-) TimerEvent: {}
[7.520602] (-) TimerEvent: {}
[7.620875] (-) TimerEvent: {}
[7.721157] (-) TimerEvent: {}
[7.821453] (-) TimerEvent: {}
[7.921730] (-) TimerEvent: {}
[8.022033] (-) TimerEvent: {}
[8.122338] (-) TimerEvent: {}
[8.222635] (-) TimerEvent: {}
[8.322956] (-) TimerEvent: {}
[8.423243] (-) TimerEvent: {}
[8.523534] (-) TimerEvent: {}
[8.623827] (-) TimerEvent: {}
[8.724134] (-) TimerEvent: {}
[8.824435] (-) TimerEvent: {}
[8.924743] (-) TimerEvent: {}
[9.025037] (-) TimerEvent: {}
[9.125328] (-) TimerEvent: {}
[9.225054] (executive_teleop) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/teleop_tool.dir/build.make:76: CMakeFiles/teleop_tool.dir/src/teleop_tool.cc.o] Error 1\n'}
[9.225321] (executive_teleop) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/teleop_tool.dir/all] Error 2\n'}
[9.225385] (-) TimerEvent: {}
[9.225559] (executive_teleop) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[9.227635] (executive_teleop) CommandEnded: {'returncode': 2}
[9.325504] (-) TimerEvent: {}
[9.328100] (executive_teleop) JobEnded: {'identifier': 'executive_teleop', 'rc': 2}
[9.338527] (-) EventReactorShutdown: {}
